/*
Cube Iridium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MarketsGet200ResponseResultFeeTablesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketsGet200ResponseResultFeeTablesInner{}

// MarketsGet200ResponseResultFeeTablesInner A fee table consisting of one or more fee tiers. Each tier is applied in priority order and the first tier whose requirements match the characteristics of a given fill determines the fees for that fill. Each market is associated with a specific fee table via its \"feeTableId\".
type MarketsGet200ResponseResultFeeTablesInner struct {
	FeeTableId int32 `json:"feeTableId"`
	FeeTiers []MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner `json:"feeTiers"`
}

type _MarketsGet200ResponseResultFeeTablesInner MarketsGet200ResponseResultFeeTablesInner

// NewMarketsGet200ResponseResultFeeTablesInner instantiates a new MarketsGet200ResponseResultFeeTablesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketsGet200ResponseResultFeeTablesInner(feeTableId int32, feeTiers []MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner) *MarketsGet200ResponseResultFeeTablesInner {
	this := MarketsGet200ResponseResultFeeTablesInner{}
	this.FeeTableId = feeTableId
	this.FeeTiers = feeTiers
	return &this
}

// NewMarketsGet200ResponseResultFeeTablesInnerWithDefaults instantiates a new MarketsGet200ResponseResultFeeTablesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketsGet200ResponseResultFeeTablesInnerWithDefaults() *MarketsGet200ResponseResultFeeTablesInner {
	this := MarketsGet200ResponseResultFeeTablesInner{}
	return &this
}

// GetFeeTableId returns the FeeTableId field value
func (o *MarketsGet200ResponseResultFeeTablesInner) GetFeeTableId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FeeTableId
}

// GetFeeTableIdOk returns a tuple with the FeeTableId field value
// and a boolean to check if the value has been set.
func (o *MarketsGet200ResponseResultFeeTablesInner) GetFeeTableIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeTableId, true
}

// SetFeeTableId sets field value
func (o *MarketsGet200ResponseResultFeeTablesInner) SetFeeTableId(v int32) {
	o.FeeTableId = v
}

// GetFeeTiers returns the FeeTiers field value
func (o *MarketsGet200ResponseResultFeeTablesInner) GetFeeTiers() []MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner {
	if o == nil {
		var ret []MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner
		return ret
	}

	return o.FeeTiers
}

// GetFeeTiersOk returns a tuple with the FeeTiers field value
// and a boolean to check if the value has been set.
func (o *MarketsGet200ResponseResultFeeTablesInner) GetFeeTiersOk() ([]MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeeTiers, true
}

// SetFeeTiers sets field value
func (o *MarketsGet200ResponseResultFeeTablesInner) SetFeeTiers(v []MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner) {
	o.FeeTiers = v
}

func (o MarketsGet200ResponseResultFeeTablesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketsGet200ResponseResultFeeTablesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["feeTableId"] = o.FeeTableId
	toSerialize["feeTiers"] = o.FeeTiers
	return toSerialize, nil
}

func (o *MarketsGet200ResponseResultFeeTablesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"feeTableId",
		"feeTiers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMarketsGet200ResponseResultFeeTablesInner := _MarketsGet200ResponseResultFeeTablesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMarketsGet200ResponseResultFeeTablesInner)

	if err != nil {
		return err
	}

	*o = MarketsGet200ResponseResultFeeTablesInner(varMarketsGet200ResponseResultFeeTablesInner)

	return err
}

type NullableMarketsGet200ResponseResultFeeTablesInner struct {
	value *MarketsGet200ResponseResultFeeTablesInner
	isSet bool
}

func (v NullableMarketsGet200ResponseResultFeeTablesInner) Get() *MarketsGet200ResponseResultFeeTablesInner {
	return v.value
}

func (v *NullableMarketsGet200ResponseResultFeeTablesInner) Set(val *MarketsGet200ResponseResultFeeTablesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketsGet200ResponseResultFeeTablesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketsGet200ResponseResultFeeTablesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketsGet200ResponseResultFeeTablesInner(val *MarketsGet200ResponseResultFeeTablesInner) *NullableMarketsGet200ResponseResultFeeTablesInner {
	return &NullableMarketsGet200ResponseResultFeeTablesInner{value: val, isSet: true}
}

func (v NullableMarketsGet200ResponseResultFeeTablesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketsGet200ResponseResultFeeTablesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


