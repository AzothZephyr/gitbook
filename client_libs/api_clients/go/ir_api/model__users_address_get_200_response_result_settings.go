/*
Cube Iridium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UsersAddressGet200ResponseResultSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersAddressGet200ResponseResultSettings{}

// UsersAddressGet200ResponseResultSettings struct for UsersAddressGet200ResponseResultSettings
type UsersAddressGet200ResponseResultSettings struct {
	Whitelisted bool `json:"whitelisted"`
	WhitelistStatus string `json:"whitelistStatus"`
}

type _UsersAddressGet200ResponseResultSettings UsersAddressGet200ResponseResultSettings

// NewUsersAddressGet200ResponseResultSettings instantiates a new UsersAddressGet200ResponseResultSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersAddressGet200ResponseResultSettings(whitelisted bool, whitelistStatus string) *UsersAddressGet200ResponseResultSettings {
	this := UsersAddressGet200ResponseResultSettings{}
	this.Whitelisted = whitelisted
	this.WhitelistStatus = whitelistStatus
	return &this
}

// NewUsersAddressGet200ResponseResultSettingsWithDefaults instantiates a new UsersAddressGet200ResponseResultSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersAddressGet200ResponseResultSettingsWithDefaults() *UsersAddressGet200ResponseResultSettings {
	this := UsersAddressGet200ResponseResultSettings{}
	return &this
}

// GetWhitelisted returns the Whitelisted field value
func (o *UsersAddressGet200ResponseResultSettings) GetWhitelisted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Whitelisted
}

// GetWhitelistedOk returns a tuple with the Whitelisted field value
// and a boolean to check if the value has been set.
func (o *UsersAddressGet200ResponseResultSettings) GetWhitelistedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Whitelisted, true
}

// SetWhitelisted sets field value
func (o *UsersAddressGet200ResponseResultSettings) SetWhitelisted(v bool) {
	o.Whitelisted = v
}

// GetWhitelistStatus returns the WhitelistStatus field value
func (o *UsersAddressGet200ResponseResultSettings) GetWhitelistStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WhitelistStatus
}

// GetWhitelistStatusOk returns a tuple with the WhitelistStatus field value
// and a boolean to check if the value has been set.
func (o *UsersAddressGet200ResponseResultSettings) GetWhitelistStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WhitelistStatus, true
}

// SetWhitelistStatus sets field value
func (o *UsersAddressGet200ResponseResultSettings) SetWhitelistStatus(v string) {
	o.WhitelistStatus = v
}

func (o UsersAddressGet200ResponseResultSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersAddressGet200ResponseResultSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["whitelisted"] = o.Whitelisted
	toSerialize["whitelistStatus"] = o.WhitelistStatus
	return toSerialize, nil
}

func (o *UsersAddressGet200ResponseResultSettings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"whitelisted",
		"whitelistStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsersAddressGet200ResponseResultSettings := _UsersAddressGet200ResponseResultSettings{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsersAddressGet200ResponseResultSettings)

	if err != nil {
		return err
	}

	*o = UsersAddressGet200ResponseResultSettings(varUsersAddressGet200ResponseResultSettings)

	return err
}

type NullableUsersAddressGet200ResponseResultSettings struct {
	value *UsersAddressGet200ResponseResultSettings
	isSet bool
}

func (v NullableUsersAddressGet200ResponseResultSettings) Get() *UsersAddressGet200ResponseResultSettings {
	return v.value
}

func (v *NullableUsersAddressGet200ResponseResultSettings) Set(val *UsersAddressGet200ResponseResultSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersAddressGet200ResponseResultSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersAddressGet200ResponseResultSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersAddressGet200ResponseResultSettings(val *UsersAddressGet200ResponseResultSettings) *NullableUsersAddressGet200ResponseResultSettings {
	return &NullableUsersAddressGet200ResponseResultSettings{value: val, isSet: true}
}

func (v NullableUsersAddressGet200ResponseResultSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersAddressGet200ResponseResultSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


