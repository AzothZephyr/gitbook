/*
Cube Iridium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UsersFeeEstimateMarketIdGet200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersFeeEstimateMarketIdGet200ResponseResult{}

// UsersFeeEstimateMarketIdGet200ResponseResult struct for UsersFeeEstimateMarketIdGet200ResponseResult
type UsersFeeEstimateMarketIdGet200ResponseResult struct {
	MarketId int32 `json:"marketId"`
	UserKey string `json:"userKey"`
	MakerFeeRatio float64 `json:"makerFeeRatio"`
	TakerFeeRatio float64 `json:"takerFeeRatio"`
}

type _UsersFeeEstimateMarketIdGet200ResponseResult UsersFeeEstimateMarketIdGet200ResponseResult

// NewUsersFeeEstimateMarketIdGet200ResponseResult instantiates a new UsersFeeEstimateMarketIdGet200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersFeeEstimateMarketIdGet200ResponseResult(marketId int32, userKey string, makerFeeRatio float64, takerFeeRatio float64) *UsersFeeEstimateMarketIdGet200ResponseResult {
	this := UsersFeeEstimateMarketIdGet200ResponseResult{}
	this.MarketId = marketId
	this.UserKey = userKey
	this.MakerFeeRatio = makerFeeRatio
	this.TakerFeeRatio = takerFeeRatio
	return &this
}

// NewUsersFeeEstimateMarketIdGet200ResponseResultWithDefaults instantiates a new UsersFeeEstimateMarketIdGet200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersFeeEstimateMarketIdGet200ResponseResultWithDefaults() *UsersFeeEstimateMarketIdGet200ResponseResult {
	this := UsersFeeEstimateMarketIdGet200ResponseResult{}
	return &this
}

// GetMarketId returns the MarketId field value
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) GetMarketId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value
// and a boolean to check if the value has been set.
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) GetMarketIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarketId, true
}

// SetMarketId sets field value
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) SetMarketId(v int32) {
	o.MarketId = v
}

// GetUserKey returns the UserKey field value
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) GetUserKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserKey
}

// GetUserKeyOk returns a tuple with the UserKey field value
// and a boolean to check if the value has been set.
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) GetUserKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserKey, true
}

// SetUserKey sets field value
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) SetUserKey(v string) {
	o.UserKey = v
}

// GetMakerFeeRatio returns the MakerFeeRatio field value
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) GetMakerFeeRatio() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.MakerFeeRatio
}

// GetMakerFeeRatioOk returns a tuple with the MakerFeeRatio field value
// and a boolean to check if the value has been set.
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) GetMakerFeeRatioOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MakerFeeRatio, true
}

// SetMakerFeeRatio sets field value
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) SetMakerFeeRatio(v float64) {
	o.MakerFeeRatio = v
}

// GetTakerFeeRatio returns the TakerFeeRatio field value
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) GetTakerFeeRatio() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TakerFeeRatio
}

// GetTakerFeeRatioOk returns a tuple with the TakerFeeRatio field value
// and a boolean to check if the value has been set.
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) GetTakerFeeRatioOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TakerFeeRatio, true
}

// SetTakerFeeRatio sets field value
func (o *UsersFeeEstimateMarketIdGet200ResponseResult) SetTakerFeeRatio(v float64) {
	o.TakerFeeRatio = v
}

func (o UsersFeeEstimateMarketIdGet200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersFeeEstimateMarketIdGet200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["marketId"] = o.MarketId
	toSerialize["userKey"] = o.UserKey
	toSerialize["makerFeeRatio"] = o.MakerFeeRatio
	toSerialize["takerFeeRatio"] = o.TakerFeeRatio
	return toSerialize, nil
}

func (o *UsersFeeEstimateMarketIdGet200ResponseResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"marketId",
		"userKey",
		"makerFeeRatio",
		"takerFeeRatio",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsersFeeEstimateMarketIdGet200ResponseResult := _UsersFeeEstimateMarketIdGet200ResponseResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsersFeeEstimateMarketIdGet200ResponseResult)

	if err != nil {
		return err
	}

	*o = UsersFeeEstimateMarketIdGet200ResponseResult(varUsersFeeEstimateMarketIdGet200ResponseResult)

	return err
}

type NullableUsersFeeEstimateMarketIdGet200ResponseResult struct {
	value *UsersFeeEstimateMarketIdGet200ResponseResult
	isSet bool
}

func (v NullableUsersFeeEstimateMarketIdGet200ResponseResult) Get() *UsersFeeEstimateMarketIdGet200ResponseResult {
	return v.value
}

func (v *NullableUsersFeeEstimateMarketIdGet200ResponseResult) Set(val *UsersFeeEstimateMarketIdGet200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersFeeEstimateMarketIdGet200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersFeeEstimateMarketIdGet200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersFeeEstimateMarketIdGet200ResponseResult(val *UsersFeeEstimateMarketIdGet200ResponseResult) *NullableUsersFeeEstimateMarketIdGet200ResponseResult {
	return &NullableUsersFeeEstimateMarketIdGet200ResponseResult{value: val, isSet: true}
}

func (v NullableUsersFeeEstimateMarketIdGet200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersFeeEstimateMarketIdGet200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


