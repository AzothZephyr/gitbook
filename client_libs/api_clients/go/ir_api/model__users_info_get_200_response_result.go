/*
Cube Iridium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UsersInfoGet200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersInfoGet200ResponseResult{}

// UsersInfoGet200ResponseResult struct for UsersInfoGet200ResponseResult
type UsersInfoGet200ResponseResult struct {
	ApiKeys []UsersInfoGet200ResponseResultApiKeysInner `json:"apiKeys"`
	Subaccounts []UsersInfoGet200ResponseResultSubaccountsInner `json:"subaccounts"`
	Id string `json:"id"`
	Email string `json:"email"`
	Status string `json:"status"`
	VipLevel int32 `json:"vipLevel"`
	Points int64 `json:"points"`
	MpcKeyId NullableInt64 `json:"mpcKeyId,omitempty"`
	GuardianHasKey []UsersInfoGet200ResponseResultGuardianHasKeyInner `json:"guardianHasKey,omitempty"`
	HasGuardianQuorum bool `json:"hasGuardianQuorum"`
	PhoneNumber NullableString `json:"phoneNumber,omitempty"`
	KycStatus map[string]UsersInfoGet200ResponseResultKycStatusValue `json:"kycStatus"`
	HasApprovedKyc bool `json:"hasApprovedKyc"`
	Registration NullableUsersInfoGet200ResponseResultRegistration `json:"registration,omitempty"`
	FirstName NullableString `json:"firstName,omitempty"`
	LastName NullableString `json:"lastName,omitempty"`
	Country NullableString `json:"country,omitempty"`
	InviteId NullableString `json:"inviteId,omitempty"`
	ReferralCode NullableString `json:"referralCode,omitempty"`
	MaxSubaccounts int32 `json:"maxSubaccounts"`
}

type _UsersInfoGet200ResponseResult UsersInfoGet200ResponseResult

// NewUsersInfoGet200ResponseResult instantiates a new UsersInfoGet200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersInfoGet200ResponseResult(apiKeys []UsersInfoGet200ResponseResultApiKeysInner, subaccounts []UsersInfoGet200ResponseResultSubaccountsInner, id string, email string, status string, vipLevel int32, points int64, hasGuardianQuorum bool, kycStatus map[string]UsersInfoGet200ResponseResultKycStatusValue, hasApprovedKyc bool, maxSubaccounts int32) *UsersInfoGet200ResponseResult {
	this := UsersInfoGet200ResponseResult{}
	this.ApiKeys = apiKeys
	this.Subaccounts = subaccounts
	this.Id = id
	this.Email = email
	this.Status = status
	this.VipLevel = vipLevel
	this.Points = points
	this.HasGuardianQuorum = hasGuardianQuorum
	this.KycStatus = kycStatus
	this.HasApprovedKyc = hasApprovedKyc
	this.MaxSubaccounts = maxSubaccounts
	return &this
}

// NewUsersInfoGet200ResponseResultWithDefaults instantiates a new UsersInfoGet200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersInfoGet200ResponseResultWithDefaults() *UsersInfoGet200ResponseResult {
	this := UsersInfoGet200ResponseResult{}
	return &this
}

// GetApiKeys returns the ApiKeys field value
func (o *UsersInfoGet200ResponseResult) GetApiKeys() []UsersInfoGet200ResponseResultApiKeysInner {
	if o == nil {
		var ret []UsersInfoGet200ResponseResultApiKeysInner
		return ret
	}

	return o.ApiKeys
}

// GetApiKeysOk returns a tuple with the ApiKeys field value
// and a boolean to check if the value has been set.
func (o *UsersInfoGet200ResponseResult) GetApiKeysOk() ([]UsersInfoGet200ResponseResultApiKeysInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiKeys, true
}

// SetApiKeys sets field value
func (o *UsersInfoGet200ResponseResult) SetApiKeys(v []UsersInfoGet200ResponseResultApiKeysInner) {
	o.ApiKeys = v
}

// GetSubaccounts returns the Subaccounts field value
func (o *UsersInfoGet200ResponseResult) GetSubaccounts() []UsersInfoGet200ResponseResultSubaccountsInner {
	if o == nil {
		var ret []UsersInfoGet200ResponseResultSubaccountsInner
		return ret
	}

	return o.Subaccounts
}

// GetSubaccountsOk returns a tuple with the Subaccounts field value
// and a boolean to check if the value has been set.
func (o *UsersInfoGet200ResponseResult) GetSubaccountsOk() ([]UsersInfoGet200ResponseResultSubaccountsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subaccounts, true
}

// SetSubaccounts sets field value
func (o *UsersInfoGet200ResponseResult) SetSubaccounts(v []UsersInfoGet200ResponseResultSubaccountsInner) {
	o.Subaccounts = v
}

// GetId returns the Id field value
func (o *UsersInfoGet200ResponseResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UsersInfoGet200ResponseResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UsersInfoGet200ResponseResult) SetId(v string) {
	o.Id = v
}

// GetEmail returns the Email field value
func (o *UsersInfoGet200ResponseResult) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UsersInfoGet200ResponseResult) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UsersInfoGet200ResponseResult) SetEmail(v string) {
	o.Email = v
}

// GetStatus returns the Status field value
func (o *UsersInfoGet200ResponseResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *UsersInfoGet200ResponseResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *UsersInfoGet200ResponseResult) SetStatus(v string) {
	o.Status = v
}

// GetVipLevel returns the VipLevel field value
func (o *UsersInfoGet200ResponseResult) GetVipLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VipLevel
}

// GetVipLevelOk returns a tuple with the VipLevel field value
// and a boolean to check if the value has been set.
func (o *UsersInfoGet200ResponseResult) GetVipLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VipLevel, true
}

// SetVipLevel sets field value
func (o *UsersInfoGet200ResponseResult) SetVipLevel(v int32) {
	o.VipLevel = v
}

// GetPoints returns the Points field value
func (o *UsersInfoGet200ResponseResult) GetPoints() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Points
}

// GetPointsOk returns a tuple with the Points field value
// and a boolean to check if the value has been set.
func (o *UsersInfoGet200ResponseResult) GetPointsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Points, true
}

// SetPoints sets field value
func (o *UsersInfoGet200ResponseResult) SetPoints(v int64) {
	o.Points = v
}

// GetMpcKeyId returns the MpcKeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersInfoGet200ResponseResult) GetMpcKeyId() int64 {
	if o == nil || IsNil(o.MpcKeyId.Get()) {
		var ret int64
		return ret
	}
	return *o.MpcKeyId.Get()
}

// GetMpcKeyIdOk returns a tuple with the MpcKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersInfoGet200ResponseResult) GetMpcKeyIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MpcKeyId.Get(), o.MpcKeyId.IsSet()
}

// HasMpcKeyId returns a boolean if a field has been set.
func (o *UsersInfoGet200ResponseResult) HasMpcKeyId() bool {
	if o != nil && o.MpcKeyId.IsSet() {
		return true
	}

	return false
}

// SetMpcKeyId gets a reference to the given NullableInt64 and assigns it to the MpcKeyId field.
func (o *UsersInfoGet200ResponseResult) SetMpcKeyId(v int64) {
	o.MpcKeyId.Set(&v)
}
// SetMpcKeyIdNil sets the value for MpcKeyId to be an explicit nil
func (o *UsersInfoGet200ResponseResult) SetMpcKeyIdNil() {
	o.MpcKeyId.Set(nil)
}

// UnsetMpcKeyId ensures that no value is present for MpcKeyId, not even an explicit nil
func (o *UsersInfoGet200ResponseResult) UnsetMpcKeyId() {
	o.MpcKeyId.Unset()
}

// GetGuardianHasKey returns the GuardianHasKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersInfoGet200ResponseResult) GetGuardianHasKey() []UsersInfoGet200ResponseResultGuardianHasKeyInner {
	if o == nil {
		var ret []UsersInfoGet200ResponseResultGuardianHasKeyInner
		return ret
	}
	return o.GuardianHasKey
}

// GetGuardianHasKeyOk returns a tuple with the GuardianHasKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersInfoGet200ResponseResult) GetGuardianHasKeyOk() ([]UsersInfoGet200ResponseResultGuardianHasKeyInner, bool) {
	if o == nil || IsNil(o.GuardianHasKey) {
		return nil, false
	}
	return o.GuardianHasKey, true
}

// HasGuardianHasKey returns a boolean if a field has been set.
func (o *UsersInfoGet200ResponseResult) HasGuardianHasKey() bool {
	if o != nil && !IsNil(o.GuardianHasKey) {
		return true
	}

	return false
}

// SetGuardianHasKey gets a reference to the given []UsersInfoGet200ResponseResultGuardianHasKeyInner and assigns it to the GuardianHasKey field.
func (o *UsersInfoGet200ResponseResult) SetGuardianHasKey(v []UsersInfoGet200ResponseResultGuardianHasKeyInner) {
	o.GuardianHasKey = v
}

// GetHasGuardianQuorum returns the HasGuardianQuorum field value
func (o *UsersInfoGet200ResponseResult) GetHasGuardianQuorum() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasGuardianQuorum
}

// GetHasGuardianQuorumOk returns a tuple with the HasGuardianQuorum field value
// and a boolean to check if the value has been set.
func (o *UsersInfoGet200ResponseResult) GetHasGuardianQuorumOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasGuardianQuorum, true
}

// SetHasGuardianQuorum sets field value
func (o *UsersInfoGet200ResponseResult) SetHasGuardianQuorum(v bool) {
	o.HasGuardianQuorum = v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersInfoGet200ResponseResult) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersInfoGet200ResponseResult) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *UsersInfoGet200ResponseResult) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *UsersInfoGet200ResponseResult) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}
// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *UsersInfoGet200ResponseResult) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *UsersInfoGet200ResponseResult) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

// GetKycStatus returns the KycStatus field value
func (o *UsersInfoGet200ResponseResult) GetKycStatus() map[string]UsersInfoGet200ResponseResultKycStatusValue {
	if o == nil {
		var ret map[string]UsersInfoGet200ResponseResultKycStatusValue
		return ret
	}

	return o.KycStatus
}

// GetKycStatusOk returns a tuple with the KycStatus field value
// and a boolean to check if the value has been set.
func (o *UsersInfoGet200ResponseResult) GetKycStatusOk() (*map[string]UsersInfoGet200ResponseResultKycStatusValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KycStatus, true
}

// SetKycStatus sets field value
func (o *UsersInfoGet200ResponseResult) SetKycStatus(v map[string]UsersInfoGet200ResponseResultKycStatusValue) {
	o.KycStatus = v
}

// GetHasApprovedKyc returns the HasApprovedKyc field value
func (o *UsersInfoGet200ResponseResult) GetHasApprovedKyc() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasApprovedKyc
}

// GetHasApprovedKycOk returns a tuple with the HasApprovedKyc field value
// and a boolean to check if the value has been set.
func (o *UsersInfoGet200ResponseResult) GetHasApprovedKycOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasApprovedKyc, true
}

// SetHasApprovedKyc sets field value
func (o *UsersInfoGet200ResponseResult) SetHasApprovedKyc(v bool) {
	o.HasApprovedKyc = v
}

// GetRegistration returns the Registration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersInfoGet200ResponseResult) GetRegistration() UsersInfoGet200ResponseResultRegistration {
	if o == nil || IsNil(o.Registration.Get()) {
		var ret UsersInfoGet200ResponseResultRegistration
		return ret
	}
	return *o.Registration.Get()
}

// GetRegistrationOk returns a tuple with the Registration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersInfoGet200ResponseResult) GetRegistrationOk() (*UsersInfoGet200ResponseResultRegistration, bool) {
	if o == nil {
		return nil, false
	}
	return o.Registration.Get(), o.Registration.IsSet()
}

// HasRegistration returns a boolean if a field has been set.
func (o *UsersInfoGet200ResponseResult) HasRegistration() bool {
	if o != nil && o.Registration.IsSet() {
		return true
	}

	return false
}

// SetRegistration gets a reference to the given NullableUsersInfoGet200ResponseResultRegistration and assigns it to the Registration field.
func (o *UsersInfoGet200ResponseResult) SetRegistration(v UsersInfoGet200ResponseResultRegistration) {
	o.Registration.Set(&v)
}
// SetRegistrationNil sets the value for Registration to be an explicit nil
func (o *UsersInfoGet200ResponseResult) SetRegistrationNil() {
	o.Registration.Set(nil)
}

// UnsetRegistration ensures that no value is present for Registration, not even an explicit nil
func (o *UsersInfoGet200ResponseResult) UnsetRegistration() {
	o.Registration.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersInfoGet200ResponseResult) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersInfoGet200ResponseResult) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *UsersInfoGet200ResponseResult) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *UsersInfoGet200ResponseResult) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *UsersInfoGet200ResponseResult) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *UsersInfoGet200ResponseResult) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersInfoGet200ResponseResult) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersInfoGet200ResponseResult) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *UsersInfoGet200ResponseResult) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *UsersInfoGet200ResponseResult) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *UsersInfoGet200ResponseResult) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *UsersInfoGet200ResponseResult) UnsetLastName() {
	o.LastName.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersInfoGet200ResponseResult) GetCountry() string {
	if o == nil || IsNil(o.Country.Get()) {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersInfoGet200ResponseResult) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *UsersInfoGet200ResponseResult) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *UsersInfoGet200ResponseResult) SetCountry(v string) {
	o.Country.Set(&v)
}
// SetCountryNil sets the value for Country to be an explicit nil
func (o *UsersInfoGet200ResponseResult) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *UsersInfoGet200ResponseResult) UnsetCountry() {
	o.Country.Unset()
}

// GetInviteId returns the InviteId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersInfoGet200ResponseResult) GetInviteId() string {
	if o == nil || IsNil(o.InviteId.Get()) {
		var ret string
		return ret
	}
	return *o.InviteId.Get()
}

// GetInviteIdOk returns a tuple with the InviteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersInfoGet200ResponseResult) GetInviteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InviteId.Get(), o.InviteId.IsSet()
}

// HasInviteId returns a boolean if a field has been set.
func (o *UsersInfoGet200ResponseResult) HasInviteId() bool {
	if o != nil && o.InviteId.IsSet() {
		return true
	}

	return false
}

// SetInviteId gets a reference to the given NullableString and assigns it to the InviteId field.
func (o *UsersInfoGet200ResponseResult) SetInviteId(v string) {
	o.InviteId.Set(&v)
}
// SetInviteIdNil sets the value for InviteId to be an explicit nil
func (o *UsersInfoGet200ResponseResult) SetInviteIdNil() {
	o.InviteId.Set(nil)
}

// UnsetInviteId ensures that no value is present for InviteId, not even an explicit nil
func (o *UsersInfoGet200ResponseResult) UnsetInviteId() {
	o.InviteId.Unset()
}

// GetReferralCode returns the ReferralCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersInfoGet200ResponseResult) GetReferralCode() string {
	if o == nil || IsNil(o.ReferralCode.Get()) {
		var ret string
		return ret
	}
	return *o.ReferralCode.Get()
}

// GetReferralCodeOk returns a tuple with the ReferralCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersInfoGet200ResponseResult) GetReferralCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferralCode.Get(), o.ReferralCode.IsSet()
}

// HasReferralCode returns a boolean if a field has been set.
func (o *UsersInfoGet200ResponseResult) HasReferralCode() bool {
	if o != nil && o.ReferralCode.IsSet() {
		return true
	}

	return false
}

// SetReferralCode gets a reference to the given NullableString and assigns it to the ReferralCode field.
func (o *UsersInfoGet200ResponseResult) SetReferralCode(v string) {
	o.ReferralCode.Set(&v)
}
// SetReferralCodeNil sets the value for ReferralCode to be an explicit nil
func (o *UsersInfoGet200ResponseResult) SetReferralCodeNil() {
	o.ReferralCode.Set(nil)
}

// UnsetReferralCode ensures that no value is present for ReferralCode, not even an explicit nil
func (o *UsersInfoGet200ResponseResult) UnsetReferralCode() {
	o.ReferralCode.Unset()
}

// GetMaxSubaccounts returns the MaxSubaccounts field value
func (o *UsersInfoGet200ResponseResult) GetMaxSubaccounts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxSubaccounts
}

// GetMaxSubaccountsOk returns a tuple with the MaxSubaccounts field value
// and a boolean to check if the value has been set.
func (o *UsersInfoGet200ResponseResult) GetMaxSubaccountsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxSubaccounts, true
}

// SetMaxSubaccounts sets field value
func (o *UsersInfoGet200ResponseResult) SetMaxSubaccounts(v int32) {
	o.MaxSubaccounts = v
}

func (o UsersInfoGet200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersInfoGet200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiKeys"] = o.ApiKeys
	toSerialize["subaccounts"] = o.Subaccounts
	toSerialize["id"] = o.Id
	toSerialize["email"] = o.Email
	toSerialize["status"] = o.Status
	toSerialize["vipLevel"] = o.VipLevel
	toSerialize["points"] = o.Points
	if o.MpcKeyId.IsSet() {
		toSerialize["mpcKeyId"] = o.MpcKeyId.Get()
	}
	if o.GuardianHasKey != nil {
		toSerialize["guardianHasKey"] = o.GuardianHasKey
	}
	toSerialize["hasGuardianQuorum"] = o.HasGuardianQuorum
	if o.PhoneNumber.IsSet() {
		toSerialize["phoneNumber"] = o.PhoneNumber.Get()
	}
	toSerialize["kycStatus"] = o.KycStatus
	toSerialize["hasApprovedKyc"] = o.HasApprovedKyc
	if o.Registration.IsSet() {
		toSerialize["registration"] = o.Registration.Get()
	}
	if o.FirstName.IsSet() {
		toSerialize["firstName"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if o.InviteId.IsSet() {
		toSerialize["inviteId"] = o.InviteId.Get()
	}
	if o.ReferralCode.IsSet() {
		toSerialize["referralCode"] = o.ReferralCode.Get()
	}
	toSerialize["maxSubaccounts"] = o.MaxSubaccounts
	return toSerialize, nil
}

func (o *UsersInfoGet200ResponseResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"apiKeys",
		"subaccounts",
		"id",
		"email",
		"status",
		"vipLevel",
		"points",
		"hasGuardianQuorum",
		"kycStatus",
		"hasApprovedKyc",
		"maxSubaccounts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsersInfoGet200ResponseResult := _UsersInfoGet200ResponseResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsersInfoGet200ResponseResult)

	if err != nil {
		return err
	}

	*o = UsersInfoGet200ResponseResult(varUsersInfoGet200ResponseResult)

	return err
}

type NullableUsersInfoGet200ResponseResult struct {
	value *UsersInfoGet200ResponseResult
	isSet bool
}

func (v NullableUsersInfoGet200ResponseResult) Get() *UsersInfoGet200ResponseResult {
	return v.value
}

func (v *NullableUsersInfoGet200ResponseResult) Set(val *UsersInfoGet200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersInfoGet200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersInfoGet200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersInfoGet200ResponseResult(val *UsersInfoGet200ResponseResult) *NullableUsersInfoGet200ResponseResult {
	return &NullableUsersInfoGet200ResponseResult{value: val, isSet: true}
}

func (v NullableUsersInfoGet200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersInfoGet200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


