/*
Cube Iridium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UsersSubaccountSubaccountIdFillsGet200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersSubaccountSubaccountIdFillsGet200ResponseResult{}

// UsersSubaccountSubaccountIdFillsGet200ResponseResult struct for UsersSubaccountSubaccountIdFillsGet200ResponseResult
type UsersSubaccountSubaccountIdFillsGet200ResponseResult struct {
	Name string `json:"name"`
	Fills []UsersSubaccountSubaccountIdFillsGet200ResponseResultFillsInner `json:"fills"`
}

type _UsersSubaccountSubaccountIdFillsGet200ResponseResult UsersSubaccountSubaccountIdFillsGet200ResponseResult

// NewUsersSubaccountSubaccountIdFillsGet200ResponseResult instantiates a new UsersSubaccountSubaccountIdFillsGet200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersSubaccountSubaccountIdFillsGet200ResponseResult(name string, fills []UsersSubaccountSubaccountIdFillsGet200ResponseResultFillsInner) *UsersSubaccountSubaccountIdFillsGet200ResponseResult {
	this := UsersSubaccountSubaccountIdFillsGet200ResponseResult{}
	this.Name = name
	this.Fills = fills
	return &this
}

// NewUsersSubaccountSubaccountIdFillsGet200ResponseResultWithDefaults instantiates a new UsersSubaccountSubaccountIdFillsGet200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersSubaccountSubaccountIdFillsGet200ResponseResultWithDefaults() *UsersSubaccountSubaccountIdFillsGet200ResponseResult {
	this := UsersSubaccountSubaccountIdFillsGet200ResponseResult{}
	return &this
}

// GetName returns the Name field value
func (o *UsersSubaccountSubaccountIdFillsGet200ResponseResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdFillsGet200ResponseResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UsersSubaccountSubaccountIdFillsGet200ResponseResult) SetName(v string) {
	o.Name = v
}

// GetFills returns the Fills field value
func (o *UsersSubaccountSubaccountIdFillsGet200ResponseResult) GetFills() []UsersSubaccountSubaccountIdFillsGet200ResponseResultFillsInner {
	if o == nil {
		var ret []UsersSubaccountSubaccountIdFillsGet200ResponseResultFillsInner
		return ret
	}

	return o.Fills
}

// GetFillsOk returns a tuple with the Fills field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdFillsGet200ResponseResult) GetFillsOk() ([]UsersSubaccountSubaccountIdFillsGet200ResponseResultFillsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fills, true
}

// SetFills sets field value
func (o *UsersSubaccountSubaccountIdFillsGet200ResponseResult) SetFills(v []UsersSubaccountSubaccountIdFillsGet200ResponseResultFillsInner) {
	o.Fills = v
}

func (o UsersSubaccountSubaccountIdFillsGet200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersSubaccountSubaccountIdFillsGet200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["fills"] = o.Fills
	return toSerialize, nil
}

func (o *UsersSubaccountSubaccountIdFillsGet200ResponseResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"fills",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsersSubaccountSubaccountIdFillsGet200ResponseResult := _UsersSubaccountSubaccountIdFillsGet200ResponseResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsersSubaccountSubaccountIdFillsGet200ResponseResult)

	if err != nil {
		return err
	}

	*o = UsersSubaccountSubaccountIdFillsGet200ResponseResult(varUsersSubaccountSubaccountIdFillsGet200ResponseResult)

	return err
}

type NullableUsersSubaccountSubaccountIdFillsGet200ResponseResult struct {
	value *UsersSubaccountSubaccountIdFillsGet200ResponseResult
	isSet bool
}

func (v NullableUsersSubaccountSubaccountIdFillsGet200ResponseResult) Get() *UsersSubaccountSubaccountIdFillsGet200ResponseResult {
	return v.value
}

func (v *NullableUsersSubaccountSubaccountIdFillsGet200ResponseResult) Set(val *UsersSubaccountSubaccountIdFillsGet200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersSubaccountSubaccountIdFillsGet200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersSubaccountSubaccountIdFillsGet200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersSubaccountSubaccountIdFillsGet200ResponseResult(val *UsersSubaccountSubaccountIdFillsGet200ResponseResult) *NullableUsersSubaccountSubaccountIdFillsGet200ResponseResult {
	return &NullableUsersSubaccountSubaccountIdFillsGet200ResponseResult{value: val, isSet: true}
}

func (v NullableUsersSubaccountSubaccountIdFillsGet200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersSubaccountSubaccountIdFillsGet200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


