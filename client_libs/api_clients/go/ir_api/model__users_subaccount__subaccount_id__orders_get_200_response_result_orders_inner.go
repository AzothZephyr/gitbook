/*
Cube Iridium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner{}

// UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner struct for UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner
type UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner struct {
	// The cube-assigned order ID, also known as `ExchangeOrderId`. Unique per order.
	OrderId NullableInt64 `json:"orderId,omitempty"`
	MarketId int32 `json:"marketId"`
	Side string `json:"side"`
	// Most recent price, including modifies
	Price int32 `json:"price"`
	// Most recent quantity, including modifies
	Qty int32 `json:"qty"`
	// The matching-engine transact-time in nanoseconds that this order was created.
	CreatedAt int64 `json:"createdAt"`
	// The matching-engine transact-time in nanoseconds of the most recent modify event. Empty if the order was never modified.
	ModifiedAt NullableInt64 `json:"modifiedAt,omitempty"`
	// The matching-engine transact-time in nanoseconds when this order was cancelled. Empty if the order was never cancelled, e.g. is open or filled.
	CanceledAt NullableInt64 `json:"canceledAt,omitempty"`
	FilledAt NullableInt64 `json:"filledAt,omitempty"`
	FilledTotal NullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFilledTotal `json:"filledTotal,omitempty"`
	Fills []UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFillsInner `json:"fills"`
	// Any previous states of price/quantity associated with this order due to modifies. If the order has been modified, the original price/quantity will appear in this list.
	Modifies []UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerModifiesInner `json:"modifies"`
	// Reject reason if rejected. Cancel reason if canceled.
	Reason NullableString `json:"reason,omitempty"`
	// The settlement status for this order's fills.  If the order has no fills, or none of the fills have been assigned to a settlement batch, then this will be `None`. This can be derived from `fills`.
	Settled NullableBool `json:"settled,omitempty"`
	// The current status of this order. Note that if the order is `Open`, this is a best-effort estimation, and the order service has the most correct status.
	Status string `json:"status"`
	ClientOrderId NullableInt32 `json:"clientOrderId,omitempty"`
	TimeInForce NullableInt32 `json:"timeInForce,omitempty"`
	OrderType NullableInt32 `json:"orderType,omitempty"`
	SelfTradePrevention NullableInt32 `json:"selfTradePrevention,omitempty"`
	CancelOnDisconnect NullableBool `json:"cancelOnDisconnect,omitempty"`
	PostOnly NullableBool `json:"postOnly,omitempty"`
}

type _UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner

// NewUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner instantiates a new UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner(marketId int32, side string, price int32, qty int32, createdAt int64, fills []UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFillsInner, modifies []UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerModifiesInner, status string) *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner {
	this := UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner{}
	this.MarketId = marketId
	this.Side = side
	this.Price = price
	this.Qty = qty
	this.CreatedAt = createdAt
	this.Fills = fills
	this.Modifies = modifies
	this.Status = status
	return &this
}

// NewUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerWithDefaults instantiates a new UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerWithDefaults() *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner {
	this := UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetOrderId() int64 {
	if o == nil || IsNil(o.OrderId.Get()) {
		var ret int64
		return ret
	}
	return *o.OrderId.Get()
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetOrderIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderId.Get(), o.OrderId.IsSet()
}

// HasOrderId returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasOrderId() bool {
	if o != nil && o.OrderId.IsSet() {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given NullableInt64 and assigns it to the OrderId field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetOrderId(v int64) {
	o.OrderId.Set(&v)
}
// SetOrderIdNil sets the value for OrderId to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetOrderIdNil() {
	o.OrderId.Set(nil)
}

// UnsetOrderId ensures that no value is present for OrderId, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetOrderId() {
	o.OrderId.Unset()
}

// GetMarketId returns the MarketId field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetMarketId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetMarketIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarketId, true
}

// SetMarketId sets field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetMarketId(v int32) {
	o.MarketId = v
}

// GetSide returns the Side field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetSide() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Side
}

// GetSideOk returns a tuple with the Side field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetSideOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Side, true
}

// SetSide sets field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetSide(v string) {
	o.Side = v
}

// GetPrice returns the Price field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetPrice() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetPriceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetPrice(v int32) {
	o.Price = v
}

// GetQty returns the Qty field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetQty() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Qty
}

// GetQtyOk returns a tuple with the Qty field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetQtyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Qty, true
}

// SetQty sets field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetQty(v int32) {
	o.Qty = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetModifiedAt() int64 {
	if o == nil || IsNil(o.ModifiedAt.Get()) {
		var ret int64
		return ret
	}
	return *o.ModifiedAt.Get()
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetModifiedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedAt.Get(), o.ModifiedAt.IsSet()
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt.IsSet() {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given NullableInt64 and assigns it to the ModifiedAt field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetModifiedAt(v int64) {
	o.ModifiedAt.Set(&v)
}
// SetModifiedAtNil sets the value for ModifiedAt to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetModifiedAtNil() {
	o.ModifiedAt.Set(nil)
}

// UnsetModifiedAt ensures that no value is present for ModifiedAt, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetModifiedAt() {
	o.ModifiedAt.Unset()
}

// GetCanceledAt returns the CanceledAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetCanceledAt() int64 {
	if o == nil || IsNil(o.CanceledAt.Get()) {
		var ret int64
		return ret
	}
	return *o.CanceledAt.Get()
}

// GetCanceledAtOk returns a tuple with the CanceledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetCanceledAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanceledAt.Get(), o.CanceledAt.IsSet()
}

// HasCanceledAt returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasCanceledAt() bool {
	if o != nil && o.CanceledAt.IsSet() {
		return true
	}

	return false
}

// SetCanceledAt gets a reference to the given NullableInt64 and assigns it to the CanceledAt field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetCanceledAt(v int64) {
	o.CanceledAt.Set(&v)
}
// SetCanceledAtNil sets the value for CanceledAt to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetCanceledAtNil() {
	o.CanceledAt.Set(nil)
}

// UnsetCanceledAt ensures that no value is present for CanceledAt, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetCanceledAt() {
	o.CanceledAt.Unset()
}

// GetFilledAt returns the FilledAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetFilledAt() int64 {
	if o == nil || IsNil(o.FilledAt.Get()) {
		var ret int64
		return ret
	}
	return *o.FilledAt.Get()
}

// GetFilledAtOk returns a tuple with the FilledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetFilledAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FilledAt.Get(), o.FilledAt.IsSet()
}

// HasFilledAt returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasFilledAt() bool {
	if o != nil && o.FilledAt.IsSet() {
		return true
	}

	return false
}

// SetFilledAt gets a reference to the given NullableInt64 and assigns it to the FilledAt field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetFilledAt(v int64) {
	o.FilledAt.Set(&v)
}
// SetFilledAtNil sets the value for FilledAt to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetFilledAtNil() {
	o.FilledAt.Set(nil)
}

// UnsetFilledAt ensures that no value is present for FilledAt, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetFilledAt() {
	o.FilledAt.Unset()
}

// GetFilledTotal returns the FilledTotal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetFilledTotal() UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFilledTotal {
	if o == nil || IsNil(o.FilledTotal.Get()) {
		var ret UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFilledTotal
		return ret
	}
	return *o.FilledTotal.Get()
}

// GetFilledTotalOk returns a tuple with the FilledTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetFilledTotalOk() (*UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFilledTotal, bool) {
	if o == nil {
		return nil, false
	}
	return o.FilledTotal.Get(), o.FilledTotal.IsSet()
}

// HasFilledTotal returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasFilledTotal() bool {
	if o != nil && o.FilledTotal.IsSet() {
		return true
	}

	return false
}

// SetFilledTotal gets a reference to the given NullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFilledTotal and assigns it to the FilledTotal field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetFilledTotal(v UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFilledTotal) {
	o.FilledTotal.Set(&v)
}
// SetFilledTotalNil sets the value for FilledTotal to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetFilledTotalNil() {
	o.FilledTotal.Set(nil)
}

// UnsetFilledTotal ensures that no value is present for FilledTotal, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetFilledTotal() {
	o.FilledTotal.Unset()
}

// GetFills returns the Fills field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetFills() []UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFillsInner {
	if o == nil {
		var ret []UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFillsInner
		return ret
	}

	return o.Fills
}

// GetFillsOk returns a tuple with the Fills field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetFillsOk() ([]UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFillsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fills, true
}

// SetFills sets field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetFills(v []UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerFillsInner) {
	o.Fills = v
}

// GetModifies returns the Modifies field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetModifies() []UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerModifiesInner {
	if o == nil {
		var ret []UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerModifiesInner
		return ret
	}

	return o.Modifies
}

// GetModifiesOk returns a tuple with the Modifies field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetModifiesOk() ([]UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerModifiesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Modifies, true
}

// SetModifies sets field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetModifies(v []UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInnerModifiesInner) {
	o.Modifies = v
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetReason() string {
	if o == nil || IsNil(o.Reason.Get()) {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetReason() {
	o.Reason.Unset()
}

// GetSettled returns the Settled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetSettled() bool {
	if o == nil || IsNil(o.Settled.Get()) {
		var ret bool
		return ret
	}
	return *o.Settled.Get()
}

// GetSettledOk returns a tuple with the Settled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetSettledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Settled.Get(), o.Settled.IsSet()
}

// HasSettled returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasSettled() bool {
	if o != nil && o.Settled.IsSet() {
		return true
	}

	return false
}

// SetSettled gets a reference to the given NullableBool and assigns it to the Settled field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetSettled(v bool) {
	o.Settled.Set(&v)
}
// SetSettledNil sets the value for Settled to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetSettledNil() {
	o.Settled.Set(nil)
}

// UnsetSettled ensures that no value is present for Settled, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetSettled() {
	o.Settled.Unset()
}

// GetStatus returns the Status field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetStatus(v string) {
	o.Status = v
}

// GetClientOrderId returns the ClientOrderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetClientOrderId() int32 {
	if o == nil || IsNil(o.ClientOrderId.Get()) {
		var ret int32
		return ret
	}
	return *o.ClientOrderId.Get()
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetClientOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientOrderId.Get(), o.ClientOrderId.IsSet()
}

// HasClientOrderId returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasClientOrderId() bool {
	if o != nil && o.ClientOrderId.IsSet() {
		return true
	}

	return false
}

// SetClientOrderId gets a reference to the given NullableInt32 and assigns it to the ClientOrderId field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetClientOrderId(v int32) {
	o.ClientOrderId.Set(&v)
}
// SetClientOrderIdNil sets the value for ClientOrderId to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetClientOrderIdNil() {
	o.ClientOrderId.Set(nil)
}

// UnsetClientOrderId ensures that no value is present for ClientOrderId, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetClientOrderId() {
	o.ClientOrderId.Unset()
}

// GetTimeInForce returns the TimeInForce field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetTimeInForce() int32 {
	if o == nil || IsNil(o.TimeInForce.Get()) {
		var ret int32
		return ret
	}
	return *o.TimeInForce.Get()
}

// GetTimeInForceOk returns a tuple with the TimeInForce field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetTimeInForceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeInForce.Get(), o.TimeInForce.IsSet()
}

// HasTimeInForce returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasTimeInForce() bool {
	if o != nil && o.TimeInForce.IsSet() {
		return true
	}

	return false
}

// SetTimeInForce gets a reference to the given NullableInt32 and assigns it to the TimeInForce field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetTimeInForce(v int32) {
	o.TimeInForce.Set(&v)
}
// SetTimeInForceNil sets the value for TimeInForce to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetTimeInForceNil() {
	o.TimeInForce.Set(nil)
}

// UnsetTimeInForce ensures that no value is present for TimeInForce, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetTimeInForce() {
	o.TimeInForce.Unset()
}

// GetOrderType returns the OrderType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetOrderType() int32 {
	if o == nil || IsNil(o.OrderType.Get()) {
		var ret int32
		return ret
	}
	return *o.OrderType.Get()
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetOrderTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderType.Get(), o.OrderType.IsSet()
}

// HasOrderType returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasOrderType() bool {
	if o != nil && o.OrderType.IsSet() {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given NullableInt32 and assigns it to the OrderType field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetOrderType(v int32) {
	o.OrderType.Set(&v)
}
// SetOrderTypeNil sets the value for OrderType to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetOrderTypeNil() {
	o.OrderType.Set(nil)
}

// UnsetOrderType ensures that no value is present for OrderType, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetOrderType() {
	o.OrderType.Unset()
}

// GetSelfTradePrevention returns the SelfTradePrevention field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetSelfTradePrevention() int32 {
	if o == nil || IsNil(o.SelfTradePrevention.Get()) {
		var ret int32
		return ret
	}
	return *o.SelfTradePrevention.Get()
}

// GetSelfTradePreventionOk returns a tuple with the SelfTradePrevention field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetSelfTradePreventionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SelfTradePrevention.Get(), o.SelfTradePrevention.IsSet()
}

// HasSelfTradePrevention returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasSelfTradePrevention() bool {
	if o != nil && o.SelfTradePrevention.IsSet() {
		return true
	}

	return false
}

// SetSelfTradePrevention gets a reference to the given NullableInt32 and assigns it to the SelfTradePrevention field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetSelfTradePrevention(v int32) {
	o.SelfTradePrevention.Set(&v)
}
// SetSelfTradePreventionNil sets the value for SelfTradePrevention to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetSelfTradePreventionNil() {
	o.SelfTradePrevention.Set(nil)
}

// UnsetSelfTradePrevention ensures that no value is present for SelfTradePrevention, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetSelfTradePrevention() {
	o.SelfTradePrevention.Unset()
}

// GetCancelOnDisconnect returns the CancelOnDisconnect field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetCancelOnDisconnect() bool {
	if o == nil || IsNil(o.CancelOnDisconnect.Get()) {
		var ret bool
		return ret
	}
	return *o.CancelOnDisconnect.Get()
}

// GetCancelOnDisconnectOk returns a tuple with the CancelOnDisconnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetCancelOnDisconnectOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CancelOnDisconnect.Get(), o.CancelOnDisconnect.IsSet()
}

// HasCancelOnDisconnect returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasCancelOnDisconnect() bool {
	if o != nil && o.CancelOnDisconnect.IsSet() {
		return true
	}

	return false
}

// SetCancelOnDisconnect gets a reference to the given NullableBool and assigns it to the CancelOnDisconnect field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetCancelOnDisconnect(v bool) {
	o.CancelOnDisconnect.Set(&v)
}
// SetCancelOnDisconnectNil sets the value for CancelOnDisconnect to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetCancelOnDisconnectNil() {
	o.CancelOnDisconnect.Set(nil)
}

// UnsetCancelOnDisconnect ensures that no value is present for CancelOnDisconnect, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetCancelOnDisconnect() {
	o.CancelOnDisconnect.Unset()
}

// GetPostOnly returns the PostOnly field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetPostOnly() bool {
	if o == nil || IsNil(o.PostOnly.Get()) {
		var ret bool
		return ret
	}
	return *o.PostOnly.Get()
}

// GetPostOnlyOk returns a tuple with the PostOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) GetPostOnlyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostOnly.Get(), o.PostOnly.IsSet()
}

// HasPostOnly returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) HasPostOnly() bool {
	if o != nil && o.PostOnly.IsSet() {
		return true
	}

	return false
}

// SetPostOnly gets a reference to the given NullableBool and assigns it to the PostOnly field.
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetPostOnly(v bool) {
	o.PostOnly.Set(&v)
}
// SetPostOnlyNil sets the value for PostOnly to be an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) SetPostOnlyNil() {
	o.PostOnly.Set(nil)
}

// UnsetPostOnly ensures that no value is present for PostOnly, not even an explicit nil
func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnsetPostOnly() {
	o.PostOnly.Unset()
}

func (o UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderId.IsSet() {
		toSerialize["orderId"] = o.OrderId.Get()
	}
	toSerialize["marketId"] = o.MarketId
	toSerialize["side"] = o.Side
	toSerialize["price"] = o.Price
	toSerialize["qty"] = o.Qty
	toSerialize["createdAt"] = o.CreatedAt
	if o.ModifiedAt.IsSet() {
		toSerialize["modifiedAt"] = o.ModifiedAt.Get()
	}
	if o.CanceledAt.IsSet() {
		toSerialize["canceledAt"] = o.CanceledAt.Get()
	}
	if o.FilledAt.IsSet() {
		toSerialize["filledAt"] = o.FilledAt.Get()
	}
	if o.FilledTotal.IsSet() {
		toSerialize["filledTotal"] = o.FilledTotal.Get()
	}
	toSerialize["fills"] = o.Fills
	toSerialize["modifies"] = o.Modifies
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	if o.Settled.IsSet() {
		toSerialize["settled"] = o.Settled.Get()
	}
	toSerialize["status"] = o.Status
	if o.ClientOrderId.IsSet() {
		toSerialize["clientOrderId"] = o.ClientOrderId.Get()
	}
	if o.TimeInForce.IsSet() {
		toSerialize["timeInForce"] = o.TimeInForce.Get()
	}
	if o.OrderType.IsSet() {
		toSerialize["orderType"] = o.OrderType.Get()
	}
	if o.SelfTradePrevention.IsSet() {
		toSerialize["selfTradePrevention"] = o.SelfTradePrevention.Get()
	}
	if o.CancelOnDisconnect.IsSet() {
		toSerialize["cancelOnDisconnect"] = o.CancelOnDisconnect.Get()
	}
	if o.PostOnly.IsSet() {
		toSerialize["postOnly"] = o.PostOnly.Get()
	}
	return toSerialize, nil
}

func (o *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"marketId",
		"side",
		"price",
		"qty",
		"createdAt",
		"fills",
		"modifies",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner := _UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner)

	if err != nil {
		return err
	}

	*o = UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner(varUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner)

	return err
}

type NullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner struct {
	value *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner
	isSet bool
}

func (v NullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) Get() *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner {
	return v.value
}

func (v *NullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) Set(val *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner(val *UsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) *NullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner {
	return &NullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner{value: val, isSet: true}
}

func (v NullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersSubaccountSubaccountIdOrdersGet200ResponseResultOrdersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


