/*
Cube Iridium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner{}

// UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner struct for UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner
type UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner struct {
	AssetId int32 `json:"assetId"`
	Amount float64 `json:"amount"`
	// Once the transaction has been determined / sent, `txn_hash`, `txn_index`, and `txn_state` will be populated
	TxnHash NullableString `json:"txnHash,omitempty"`
	TxnIndex NullableInt64 `json:"txnIndex,omitempty"`
	TxnState NullableString `json:"txnState,omitempty"`
	// When the withdrawal request was created.
	CreatedAt time.Time `json:"createdAt"`
	// When the withdrawal was sent out.
	UpdatedAt time.Time `json:"updatedAt"`
	// A unique identifier for this withdrawal request.
	AttemptId int64 `json:"attemptId"`
	// The withdrawal destination address
	Address string `json:"address"`
	Approved NullableBool `json:"approved,omitempty"`
	Reason NullableString `json:"reason,omitempty"`
}

type _UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner

// NewUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner instantiates a new UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner(assetId int32, amount float64, createdAt time.Time, updatedAt time.Time, attemptId int64, address string) *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner {
	this := UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner{}
	this.AssetId = assetId
	this.Amount = amount
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.AttemptId = attemptId
	this.Address = address
	return &this
}

// NewUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInnerWithDefaults instantiates a new UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInnerWithDefaults() *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner {
	this := UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner{}
	return &this
}

// GetAssetId returns the AssetId field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetAssetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetAssetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetAssetId(v int32) {
	o.AssetId = v
}

// GetAmount returns the Amount field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetAmount(v float64) {
	o.Amount = v
}

// GetTxnHash returns the TxnHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetTxnHash() string {
	if o == nil || IsNil(o.TxnHash.Get()) {
		var ret string
		return ret
	}
	return *o.TxnHash.Get()
}

// GetTxnHashOk returns a tuple with the TxnHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetTxnHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TxnHash.Get(), o.TxnHash.IsSet()
}

// HasTxnHash returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) HasTxnHash() bool {
	if o != nil && o.TxnHash.IsSet() {
		return true
	}

	return false
}

// SetTxnHash gets a reference to the given NullableString and assigns it to the TxnHash field.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetTxnHash(v string) {
	o.TxnHash.Set(&v)
}
// SetTxnHashNil sets the value for TxnHash to be an explicit nil
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetTxnHashNil() {
	o.TxnHash.Set(nil)
}

// UnsetTxnHash ensures that no value is present for TxnHash, not even an explicit nil
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) UnsetTxnHash() {
	o.TxnHash.Unset()
}

// GetTxnIndex returns the TxnIndex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetTxnIndex() int64 {
	if o == nil || IsNil(o.TxnIndex.Get()) {
		var ret int64
		return ret
	}
	return *o.TxnIndex.Get()
}

// GetTxnIndexOk returns a tuple with the TxnIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetTxnIndexOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TxnIndex.Get(), o.TxnIndex.IsSet()
}

// HasTxnIndex returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) HasTxnIndex() bool {
	if o != nil && o.TxnIndex.IsSet() {
		return true
	}

	return false
}

// SetTxnIndex gets a reference to the given NullableInt64 and assigns it to the TxnIndex field.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetTxnIndex(v int64) {
	o.TxnIndex.Set(&v)
}
// SetTxnIndexNil sets the value for TxnIndex to be an explicit nil
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetTxnIndexNil() {
	o.TxnIndex.Set(nil)
}

// UnsetTxnIndex ensures that no value is present for TxnIndex, not even an explicit nil
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) UnsetTxnIndex() {
	o.TxnIndex.Unset()
}

// GetTxnState returns the TxnState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetTxnState() string {
	if o == nil || IsNil(o.TxnState.Get()) {
		var ret string
		return ret
	}
	return *o.TxnState.Get()
}

// GetTxnStateOk returns a tuple with the TxnState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetTxnStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TxnState.Get(), o.TxnState.IsSet()
}

// HasTxnState returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) HasTxnState() bool {
	if o != nil && o.TxnState.IsSet() {
		return true
	}

	return false
}

// SetTxnState gets a reference to the given NullableString and assigns it to the TxnState field.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetTxnState(v string) {
	o.TxnState.Set(&v)
}
// SetTxnStateNil sets the value for TxnState to be an explicit nil
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetTxnStateNil() {
	o.TxnState.Set(nil)
}

// UnsetTxnState ensures that no value is present for TxnState, not even an explicit nil
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) UnsetTxnState() {
	o.TxnState.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetAttemptId returns the AttemptId field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetAttemptId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AttemptId
}

// GetAttemptIdOk returns a tuple with the AttemptId field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetAttemptIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttemptId, true
}

// SetAttemptId sets field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetAttemptId(v int64) {
	o.AttemptId = v
}

// GetAddress returns the Address field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetAddress(v string) {
	o.Address = v
}

// GetApproved returns the Approved field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetApproved() bool {
	if o == nil || IsNil(o.Approved.Get()) {
		var ret bool
		return ret
	}
	return *o.Approved.Get()
}

// GetApprovedOk returns a tuple with the Approved field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetApprovedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Approved.Get(), o.Approved.IsSet()
}

// HasApproved returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) HasApproved() bool {
	if o != nil && o.Approved.IsSet() {
		return true
	}

	return false
}

// SetApproved gets a reference to the given NullableBool and assigns it to the Approved field.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetApproved(v bool) {
	o.Approved.Set(&v)
}
// SetApprovedNil sets the value for Approved to be an explicit nil
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetApprovedNil() {
	o.Approved.Set(nil)
}

// UnsetApproved ensures that no value is present for Approved, not even an explicit nil
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) UnsetApproved() {
	o.Approved.Unset()
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetReason() string {
	if o == nil || IsNil(o.Reason.Get()) {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) UnsetReason() {
	o.Reason.Unset()
}

func (o UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["assetId"] = o.AssetId
	toSerialize["amount"] = o.Amount
	if o.TxnHash.IsSet() {
		toSerialize["txnHash"] = o.TxnHash.Get()
	}
	if o.TxnIndex.IsSet() {
		toSerialize["txnIndex"] = o.TxnIndex.Get()
	}
	if o.TxnState.IsSet() {
		toSerialize["txnState"] = o.TxnState.Get()
	}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["attemptId"] = o.AttemptId
	toSerialize["address"] = o.Address
	if o.Approved.IsSet() {
		toSerialize["approved"] = o.Approved.Get()
	}
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	return toSerialize, nil
}

func (o *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"assetId",
		"amount",
		"createdAt",
		"updatedAt",
		"attemptId",
		"address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner := _UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner)

	if err != nil {
		return err
	}

	*o = UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner(varUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner)

	return err
}

type NullableUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner struct {
	value *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner
	isSet bool
}

func (v NullableUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) Get() *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner {
	return v.value
}

func (v *NullableUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) Set(val *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner(val *UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) *NullableUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner {
	return &NullableUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner{value: val, isSet: true}
}

func (v NullableUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


