/*
Cube Iridium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UsersWithdrawPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersWithdrawPostRequest{}

// UsersWithdrawPostRequest struct for UsersWithdrawPostRequest
type UsersWithdrawPostRequest struct {
	// The subaccount to withdraw from.
	SubaccountId int32 `json:"subaccountId"`
	// The asset to withdraw. The network is determined by the asset ID.
	AssetId int32 `json:"assetId"`
	// The amount to withdraw. This is denominated in the smallest unit of the asset (e.g. satoshis for BTC, wei for ETH, lamports for SOL). The amount must be greater than the dust limit for the asset.
	Amount int32 `json:"amount"`
	// The destination address for the withdrawal.
	Destination string `json:"destination"`
}

type _UsersWithdrawPostRequest UsersWithdrawPostRequest

// NewUsersWithdrawPostRequest instantiates a new UsersWithdrawPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersWithdrawPostRequest(subaccountId int32, assetId int32, amount int32, destination string) *UsersWithdrawPostRequest {
	this := UsersWithdrawPostRequest{}
	this.SubaccountId = subaccountId
	this.AssetId = assetId
	this.Amount = amount
	this.Destination = destination
	return &this
}

// NewUsersWithdrawPostRequestWithDefaults instantiates a new UsersWithdrawPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersWithdrawPostRequestWithDefaults() *UsersWithdrawPostRequest {
	this := UsersWithdrawPostRequest{}
	return &this
}

// GetSubaccountId returns the SubaccountId field value
func (o *UsersWithdrawPostRequest) GetSubaccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SubaccountId
}

// GetSubaccountIdOk returns a tuple with the SubaccountId field value
// and a boolean to check if the value has been set.
func (o *UsersWithdrawPostRequest) GetSubaccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubaccountId, true
}

// SetSubaccountId sets field value
func (o *UsersWithdrawPostRequest) SetSubaccountId(v int32) {
	o.SubaccountId = v
}

// GetAssetId returns the AssetId field value
func (o *UsersWithdrawPostRequest) GetAssetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *UsersWithdrawPostRequest) GetAssetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *UsersWithdrawPostRequest) SetAssetId(v int32) {
	o.AssetId = v
}

// GetAmount returns the Amount field value
func (o *UsersWithdrawPostRequest) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *UsersWithdrawPostRequest) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *UsersWithdrawPostRequest) SetAmount(v int32) {
	o.Amount = v
}

// GetDestination returns the Destination field value
func (o *UsersWithdrawPostRequest) GetDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *UsersWithdrawPostRequest) GetDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *UsersWithdrawPostRequest) SetDestination(v string) {
	o.Destination = v
}

func (o UsersWithdrawPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersWithdrawPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subaccountId"] = o.SubaccountId
	toSerialize["assetId"] = o.AssetId
	toSerialize["amount"] = o.Amount
	toSerialize["destination"] = o.Destination
	return toSerialize, nil
}

func (o *UsersWithdrawPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subaccountId",
		"assetId",
		"amount",
		"destination",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsersWithdrawPostRequest := _UsersWithdrawPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUsersWithdrawPostRequest)

	if err != nil {
		return err
	}

	*o = UsersWithdrawPostRequest(varUsersWithdrawPostRequest)

	return err
}

type NullableUsersWithdrawPostRequest struct {
	value *UsersWithdrawPostRequest
	isSet bool
}

func (v NullableUsersWithdrawPostRequest) Get() *UsersWithdrawPostRequest {
	return v.value
}

func (v *NullableUsersWithdrawPostRequest) Set(val *UsersWithdrawPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersWithdrawPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersWithdrawPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersWithdrawPostRequest(val *UsersWithdrawPostRequest) *NullableUsersWithdrawPostRequest {
	return &NullableUsersWithdrawPostRequest{value: val, isSet: true}
}

func (v NullableUsersWithdrawPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersWithdrawPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


