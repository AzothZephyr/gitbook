/*
Cube Mendelev HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// BookMarketIdSnapshotGet200ResponseResult struct for BookMarketIdSnapshotGet200ResponseResult
type BookMarketIdSnapshotGet200ResponseResult struct {
	BookMarketIdSnapshotGet200ResponseResultAnyOf *BookMarketIdSnapshotGet200ResponseResultAnyOf
	BookMarketIdSnapshotGet200ResponseResultAnyOf1 *BookMarketIdSnapshotGet200ResponseResultAnyOf1
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *BookMarketIdSnapshotGet200ResponseResult) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into BookMarketIdSnapshotGet200ResponseResultAnyOf
	err = json.Unmarshal(data, &dst.BookMarketIdSnapshotGet200ResponseResultAnyOf);
	if err == nil {
		jsonBookMarketIdSnapshotGet200ResponseResultAnyOf, _ := json.Marshal(dst.BookMarketIdSnapshotGet200ResponseResultAnyOf)
		if string(jsonBookMarketIdSnapshotGet200ResponseResultAnyOf) == "{}" { // empty struct
			dst.BookMarketIdSnapshotGet200ResponseResultAnyOf = nil
		} else {
			return nil // data stored in dst.BookMarketIdSnapshotGet200ResponseResultAnyOf, return on the first match
		}
	} else {
		dst.BookMarketIdSnapshotGet200ResponseResultAnyOf = nil
	}

	// try to unmarshal JSON data into BookMarketIdSnapshotGet200ResponseResultAnyOf1
	err = json.Unmarshal(data, &dst.BookMarketIdSnapshotGet200ResponseResultAnyOf1);
	if err == nil {
		jsonBookMarketIdSnapshotGet200ResponseResultAnyOf1, _ := json.Marshal(dst.BookMarketIdSnapshotGet200ResponseResultAnyOf1)
		if string(jsonBookMarketIdSnapshotGet200ResponseResultAnyOf1) == "{}" { // empty struct
			dst.BookMarketIdSnapshotGet200ResponseResultAnyOf1 = nil
		} else {
			return nil // data stored in dst.BookMarketIdSnapshotGet200ResponseResultAnyOf1, return on the first match
		}
	} else {
		dst.BookMarketIdSnapshotGet200ResponseResultAnyOf1 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(BookMarketIdSnapshotGet200ResponseResult)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *BookMarketIdSnapshotGet200ResponseResult) MarshalJSON() ([]byte, error) {
	if src.BookMarketIdSnapshotGet200ResponseResultAnyOf != nil {
		return json.Marshal(&src.BookMarketIdSnapshotGet200ResponseResultAnyOf)
	}

	if src.BookMarketIdSnapshotGet200ResponseResultAnyOf1 != nil {
		return json.Marshal(&src.BookMarketIdSnapshotGet200ResponseResultAnyOf1)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableBookMarketIdSnapshotGet200ResponseResult struct {
	value *BookMarketIdSnapshotGet200ResponseResult
	isSet bool
}

func (v NullableBookMarketIdSnapshotGet200ResponseResult) Get() *BookMarketIdSnapshotGet200ResponseResult {
	return v.value
}

func (v *NullableBookMarketIdSnapshotGet200ResponseResult) Set(val *BookMarketIdSnapshotGet200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBookMarketIdSnapshotGet200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBookMarketIdSnapshotGet200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookMarketIdSnapshotGet200ResponseResult(val *BookMarketIdSnapshotGet200ResponseResult) *NullableBookMarketIdSnapshotGet200ResponseResult {
	return &NullableBookMarketIdSnapshotGet200ResponseResult{value: val, isSet: true}
}

func (v NullableBookMarketIdSnapshotGet200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookMarketIdSnapshotGet200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


