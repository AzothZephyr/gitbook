/*
Cube Mendelev HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ParsedBookMarketSymbolRecentTradesGet200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParsedBookMarketSymbolRecentTradesGet200ResponseResult{}

// ParsedBookMarketSymbolRecentTradesGet200ResponseResult struct for ParsedBookMarketSymbolRecentTradesGet200ResponseResult
type ParsedBookMarketSymbolRecentTradesGet200ResponseResult struct {
	TickerId string `json:"ticker_id"`
	Trades []ParsedBookMarketSymbolRecentTradesGet200ResponseResultTradesInner `json:"trades"`
}

type _ParsedBookMarketSymbolRecentTradesGet200ResponseResult ParsedBookMarketSymbolRecentTradesGet200ResponseResult

// NewParsedBookMarketSymbolRecentTradesGet200ResponseResult instantiates a new ParsedBookMarketSymbolRecentTradesGet200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParsedBookMarketSymbolRecentTradesGet200ResponseResult(tickerId string, trades []ParsedBookMarketSymbolRecentTradesGet200ResponseResultTradesInner) *ParsedBookMarketSymbolRecentTradesGet200ResponseResult {
	this := ParsedBookMarketSymbolRecentTradesGet200ResponseResult{}
	this.TickerId = tickerId
	this.Trades = trades
	return &this
}

// NewParsedBookMarketSymbolRecentTradesGet200ResponseResultWithDefaults instantiates a new ParsedBookMarketSymbolRecentTradesGet200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParsedBookMarketSymbolRecentTradesGet200ResponseResultWithDefaults() *ParsedBookMarketSymbolRecentTradesGet200ResponseResult {
	this := ParsedBookMarketSymbolRecentTradesGet200ResponseResult{}
	return &this
}

// GetTickerId returns the TickerId field value
func (o *ParsedBookMarketSymbolRecentTradesGet200ResponseResult) GetTickerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TickerId
}

// GetTickerIdOk returns a tuple with the TickerId field value
// and a boolean to check if the value has been set.
func (o *ParsedBookMarketSymbolRecentTradesGet200ResponseResult) GetTickerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TickerId, true
}

// SetTickerId sets field value
func (o *ParsedBookMarketSymbolRecentTradesGet200ResponseResult) SetTickerId(v string) {
	o.TickerId = v
}

// GetTrades returns the Trades field value
func (o *ParsedBookMarketSymbolRecentTradesGet200ResponseResult) GetTrades() []ParsedBookMarketSymbolRecentTradesGet200ResponseResultTradesInner {
	if o == nil {
		var ret []ParsedBookMarketSymbolRecentTradesGet200ResponseResultTradesInner
		return ret
	}

	return o.Trades
}

// GetTradesOk returns a tuple with the Trades field value
// and a boolean to check if the value has been set.
func (o *ParsedBookMarketSymbolRecentTradesGet200ResponseResult) GetTradesOk() ([]ParsedBookMarketSymbolRecentTradesGet200ResponseResultTradesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Trades, true
}

// SetTrades sets field value
func (o *ParsedBookMarketSymbolRecentTradesGet200ResponseResult) SetTrades(v []ParsedBookMarketSymbolRecentTradesGet200ResponseResultTradesInner) {
	o.Trades = v
}

func (o ParsedBookMarketSymbolRecentTradesGet200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParsedBookMarketSymbolRecentTradesGet200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ticker_id"] = o.TickerId
	toSerialize["trades"] = o.Trades
	return toSerialize, nil
}

func (o *ParsedBookMarketSymbolRecentTradesGet200ResponseResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ticker_id",
		"trades",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParsedBookMarketSymbolRecentTradesGet200ResponseResult := _ParsedBookMarketSymbolRecentTradesGet200ResponseResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParsedBookMarketSymbolRecentTradesGet200ResponseResult)

	if err != nil {
		return err
	}

	*o = ParsedBookMarketSymbolRecentTradesGet200ResponseResult(varParsedBookMarketSymbolRecentTradesGet200ResponseResult)

	return err
}

type NullableParsedBookMarketSymbolRecentTradesGet200ResponseResult struct {
	value *ParsedBookMarketSymbolRecentTradesGet200ResponseResult
	isSet bool
}

func (v NullableParsedBookMarketSymbolRecentTradesGet200ResponseResult) Get() *ParsedBookMarketSymbolRecentTradesGet200ResponseResult {
	return v.value
}

func (v *NullableParsedBookMarketSymbolRecentTradesGet200ResponseResult) Set(val *ParsedBookMarketSymbolRecentTradesGet200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableParsedBookMarketSymbolRecentTradesGet200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableParsedBookMarketSymbolRecentTradesGet200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParsedBookMarketSymbolRecentTradesGet200ResponseResult(val *ParsedBookMarketSymbolRecentTradesGet200ResponseResult) *NullableParsedBookMarketSymbolRecentTradesGet200ResponseResult {
	return &NullableParsedBookMarketSymbolRecentTradesGet200ResponseResult{value: val, isSet: true}
}

func (v NullableParsedBookMarketSymbolRecentTradesGet200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParsedBookMarketSymbolRecentTradesGet200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


