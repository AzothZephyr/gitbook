/*
Cube Mendelev HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ParsedBookMarketSymbolSnapshotGet200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParsedBookMarketSymbolSnapshotGet200ResponseResult{}

// ParsedBookMarketSymbolSnapshotGet200ResponseResult A market-by-price order book.  Each level contains the price and the total quantity at that price. There may be multiple orders at the same price.
type ParsedBookMarketSymbolSnapshotGet200ResponseResult struct {
	TickerId string `json:"ticker_id"`
	Timestamp int32 `json:"timestamp"`
	// A list of (price, quantity) pairs, sorted by price in descending order.
	Bids [][]string `json:"bids"`
	// A list of (price, quantity) pairs, sorted by price in ascending order.
	Asks [][]string `json:"asks"`
}

type _ParsedBookMarketSymbolSnapshotGet200ResponseResult ParsedBookMarketSymbolSnapshotGet200ResponseResult

// NewParsedBookMarketSymbolSnapshotGet200ResponseResult instantiates a new ParsedBookMarketSymbolSnapshotGet200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParsedBookMarketSymbolSnapshotGet200ResponseResult(tickerId string, timestamp int32, bids [][]string, asks [][]string) *ParsedBookMarketSymbolSnapshotGet200ResponseResult {
	this := ParsedBookMarketSymbolSnapshotGet200ResponseResult{}
	this.TickerId = tickerId
	this.Timestamp = timestamp
	this.Bids = bids
	this.Asks = asks
	return &this
}

// NewParsedBookMarketSymbolSnapshotGet200ResponseResultWithDefaults instantiates a new ParsedBookMarketSymbolSnapshotGet200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParsedBookMarketSymbolSnapshotGet200ResponseResultWithDefaults() *ParsedBookMarketSymbolSnapshotGet200ResponseResult {
	this := ParsedBookMarketSymbolSnapshotGet200ResponseResult{}
	return &this
}

// GetTickerId returns the TickerId field value
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) GetTickerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TickerId
}

// GetTickerIdOk returns a tuple with the TickerId field value
// and a boolean to check if the value has been set.
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) GetTickerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TickerId, true
}

// SetTickerId sets field value
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) SetTickerId(v string) {
	o.TickerId = v
}

// GetTimestamp returns the Timestamp field value
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) GetTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) GetTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) SetTimestamp(v int32) {
	o.Timestamp = v
}

// GetBids returns the Bids field value
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) GetBids() [][]string {
	if o == nil {
		var ret [][]string
		return ret
	}

	return o.Bids
}

// GetBidsOk returns a tuple with the Bids field value
// and a boolean to check if the value has been set.
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) GetBidsOk() ([][]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bids, true
}

// SetBids sets field value
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) SetBids(v [][]string) {
	o.Bids = v
}

// GetAsks returns the Asks field value
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) GetAsks() [][]string {
	if o == nil {
		var ret [][]string
		return ret
	}

	return o.Asks
}

// GetAsksOk returns a tuple with the Asks field value
// and a boolean to check if the value has been set.
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) GetAsksOk() ([][]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Asks, true
}

// SetAsks sets field value
func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) SetAsks(v [][]string) {
	o.Asks = v
}

func (o ParsedBookMarketSymbolSnapshotGet200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParsedBookMarketSymbolSnapshotGet200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ticker_id"] = o.TickerId
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["bids"] = o.Bids
	toSerialize["asks"] = o.Asks
	return toSerialize, nil
}

func (o *ParsedBookMarketSymbolSnapshotGet200ResponseResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ticker_id",
		"timestamp",
		"bids",
		"asks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParsedBookMarketSymbolSnapshotGet200ResponseResult := _ParsedBookMarketSymbolSnapshotGet200ResponseResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParsedBookMarketSymbolSnapshotGet200ResponseResult)

	if err != nil {
		return err
	}

	*o = ParsedBookMarketSymbolSnapshotGet200ResponseResult(varParsedBookMarketSymbolSnapshotGet200ResponseResult)

	return err
}

type NullableParsedBookMarketSymbolSnapshotGet200ResponseResult struct {
	value *ParsedBookMarketSymbolSnapshotGet200ResponseResult
	isSet bool
}

func (v NullableParsedBookMarketSymbolSnapshotGet200ResponseResult) Get() *ParsedBookMarketSymbolSnapshotGet200ResponseResult {
	return v.value
}

func (v *NullableParsedBookMarketSymbolSnapshotGet200ResponseResult) Set(val *ParsedBookMarketSymbolSnapshotGet200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableParsedBookMarketSymbolSnapshotGet200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableParsedBookMarketSymbolSnapshotGet200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParsedBookMarketSymbolSnapshotGet200ResponseResult(val *ParsedBookMarketSymbolSnapshotGet200ResponseResult) *NullableParsedBookMarketSymbolSnapshotGet200ResponseResult {
	return &NullableParsedBookMarketSymbolSnapshotGet200ResponseResult{value: val, isSet: true}
}

func (v NullableParsedBookMarketSymbolSnapshotGet200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParsedBookMarketSymbolSnapshotGet200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


