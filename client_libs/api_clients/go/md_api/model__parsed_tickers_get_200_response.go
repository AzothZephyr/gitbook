/*
Cube Mendelev HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ParsedTickersGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParsedTickersGet200Response{}

// ParsedTickersGet200Response struct for ParsedTickersGet200Response
type ParsedTickersGet200Response struct {
	Result []ParsedTickersGet200ResponseResultInner `json:"result"`
}

type _ParsedTickersGet200Response ParsedTickersGet200Response

// NewParsedTickersGet200Response instantiates a new ParsedTickersGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParsedTickersGet200Response(result []ParsedTickersGet200ResponseResultInner) *ParsedTickersGet200Response {
	this := ParsedTickersGet200Response{}
	this.Result = result
	return &this
}

// NewParsedTickersGet200ResponseWithDefaults instantiates a new ParsedTickersGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParsedTickersGet200ResponseWithDefaults() *ParsedTickersGet200Response {
	this := ParsedTickersGet200Response{}
	return &this
}

// GetResult returns the Result field value
func (o *ParsedTickersGet200Response) GetResult() []ParsedTickersGet200ResponseResultInner {
	if o == nil {
		var ret []ParsedTickersGet200ResponseResultInner
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *ParsedTickersGet200Response) GetResultOk() ([]ParsedTickersGet200ResponseResultInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Result, true
}

// SetResult sets field value
func (o *ParsedTickersGet200Response) SetResult(v []ParsedTickersGet200ResponseResultInner) {
	o.Result = v
}

func (o ParsedTickersGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParsedTickersGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	return toSerialize, nil
}

func (o *ParsedTickersGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"result",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParsedTickersGet200Response := _ParsedTickersGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParsedTickersGet200Response)

	if err != nil {
		return err
	}

	*o = ParsedTickersGet200Response(varParsedTickersGet200Response)

	return err
}

type NullableParsedTickersGet200Response struct {
	value *ParsedTickersGet200Response
	isSet bool
}

func (v NullableParsedTickersGet200Response) Get() *ParsedTickersGet200Response {
	return v.value
}

func (v *NullableParsedTickersGet200Response) Set(val *ParsedTickersGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableParsedTickersGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableParsedTickersGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParsedTickersGet200Response(val *ParsedTickersGet200Response) *NullableParsedTickersGet200Response {
	return &NullableParsedTickersGet200Response{value: val, isSet: true}
}

func (v NullableParsedTickersGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParsedTickersGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


