/*
Cube Mendelev HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TickersSnapshotGet200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TickersSnapshotGet200ResponseResult{}

// TickersSnapshotGet200ResponseResult struct for TickersSnapshotGet200ResponseResult
type TickersSnapshotGet200ResponseResult struct {
	Tops []TickersSnapshotGet200ResponseResultTopsInner `json:"tops"`
	Summaries []TickersSnapshotGet200ResponseResultSummariesInner `json:"summaries"`
}

type _TickersSnapshotGet200ResponseResult TickersSnapshotGet200ResponseResult

// NewTickersSnapshotGet200ResponseResult instantiates a new TickersSnapshotGet200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTickersSnapshotGet200ResponseResult(tops []TickersSnapshotGet200ResponseResultTopsInner, summaries []TickersSnapshotGet200ResponseResultSummariesInner) *TickersSnapshotGet200ResponseResult {
	this := TickersSnapshotGet200ResponseResult{}
	this.Tops = tops
	this.Summaries = summaries
	return &this
}

// NewTickersSnapshotGet200ResponseResultWithDefaults instantiates a new TickersSnapshotGet200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTickersSnapshotGet200ResponseResultWithDefaults() *TickersSnapshotGet200ResponseResult {
	this := TickersSnapshotGet200ResponseResult{}
	return &this
}

// GetTops returns the Tops field value
func (o *TickersSnapshotGet200ResponseResult) GetTops() []TickersSnapshotGet200ResponseResultTopsInner {
	if o == nil {
		var ret []TickersSnapshotGet200ResponseResultTopsInner
		return ret
	}

	return o.Tops
}

// GetTopsOk returns a tuple with the Tops field value
// and a boolean to check if the value has been set.
func (o *TickersSnapshotGet200ResponseResult) GetTopsOk() ([]TickersSnapshotGet200ResponseResultTopsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tops, true
}

// SetTops sets field value
func (o *TickersSnapshotGet200ResponseResult) SetTops(v []TickersSnapshotGet200ResponseResultTopsInner) {
	o.Tops = v
}

// GetSummaries returns the Summaries field value
func (o *TickersSnapshotGet200ResponseResult) GetSummaries() []TickersSnapshotGet200ResponseResultSummariesInner {
	if o == nil {
		var ret []TickersSnapshotGet200ResponseResultSummariesInner
		return ret
	}

	return o.Summaries
}

// GetSummariesOk returns a tuple with the Summaries field value
// and a boolean to check if the value has been set.
func (o *TickersSnapshotGet200ResponseResult) GetSummariesOk() ([]TickersSnapshotGet200ResponseResultSummariesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Summaries, true
}

// SetSummaries sets field value
func (o *TickersSnapshotGet200ResponseResult) SetSummaries(v []TickersSnapshotGet200ResponseResultSummariesInner) {
	o.Summaries = v
}

func (o TickersSnapshotGet200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TickersSnapshotGet200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tops"] = o.Tops
	toSerialize["summaries"] = o.Summaries
	return toSerialize, nil
}

func (o *TickersSnapshotGet200ResponseResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tops",
		"summaries",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTickersSnapshotGet200ResponseResult := _TickersSnapshotGet200ResponseResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTickersSnapshotGet200ResponseResult)

	if err != nil {
		return err
	}

	*o = TickersSnapshotGet200ResponseResult(varTickersSnapshotGet200ResponseResult)

	return err
}

type NullableTickersSnapshotGet200ResponseResult struct {
	value *TickersSnapshotGet200ResponseResult
	isSet bool
}

func (v NullableTickersSnapshotGet200ResponseResult) Get() *TickersSnapshotGet200ResponseResult {
	return v.value
}

func (v *NullableTickersSnapshotGet200ResponseResult) Set(val *TickersSnapshotGet200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTickersSnapshotGet200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTickersSnapshotGet200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTickersSnapshotGet200ResponseResult(val *TickersSnapshotGet200ResponseResult) *NullableTickersSnapshotGet200ResponseResult {
	return &NullableTickersSnapshotGet200ResponseResult{value: val, isSet: true}
}

func (v NullableTickersSnapshotGet200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTickersSnapshotGet200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


