openapi: 3.0.3
info:
  contact:
    email: support@cube.exchange
    name: Cube
    url: https://www.cube.exchange
  title: Cube Osmium HTTP API
  version: 0.1.0
servers:
- url: /
paths:
  /orders:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_orders_delete_request'
        description: "Cancel all resting orders, optionally limiting to a particular\
          \ market and / or order book side."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_orders_delete_200_response'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_orders_get_500_response'
          description: An error occurred while processing the request
    get:
      parameters:
      - explode: true
        in: query
        name: subaccountId
        required: true
        schema:
          format: uint64
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_orders_get_200_response'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_orders_get_500_response'
          description: An error occurred while processing the request
  /order:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_order_delete_request'
        description: Cancel a resting order. Note that this can be done before the
          order is acknowledged (an aggressive cancel) since the identifying field
          is the `client_order_id`.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_order_delete_200_response'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_orders_get_500_response'
          description: An error occurred while processing the request
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_order_patch_request'
        description: |-
          Modify a resting order. - If the `newPrice` and the current resting order's price is the same, and `newQuantity` is not greater, then the modify is considered a modify down, and the FIFO queue priority is maintained. Otherwise, the modify-order request is treated as an atomic cancel-replace and the replacement order is placed at the end of the FIFO queue for the new price level. - If post-only is specified and the replacement order would trade, then the request is rejected and the current resting order remains resting.

          Currently, in-flight-mitigation (IFM) is always enabled. That is, the cumulative fill qty is subtracted from `newQuantity` to calculate the new resting quantity. For example:

          ```text | Resting | Filled ---------+---------+-------- New 5    | 5       | 0 Fill 2   | 3       | 2 Modify 4 | 2       | 2 ```

          The post-modify quantity will be `newQuantity - filled = 4 - 2 = 2`.

          Regardless of IFM, the invariant for order quantity is that `quantity = remaining_quantity + cumulative_quantity`.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_order_patch_200_response'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_orders_get_500_response'
          description: An error occurred while processing the request
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_order_post_request'
        description: Place a new order.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_order_post_200_response'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_orders_get_500_response'
          description: An error occurred while processing the request
  /positions:
    get:
      parameters:
      - explode: true
        in: query
        name: subaccountId
        required: true
        schema:
          format: uint64
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_positions_get_200_response'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_orders_get_500_response'
          description: An error occurred while processing the request
components:
  headers:
    x-cube-request-id:
      description: "The cube-assigned ID for this request. If known, please supply\
        \ with support requests"
      example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      explode: false
      required: true
      schema:
        format: uuid
        title: RequestId
        type: string
      style: simple
  schemas:
    _order_post_200_response_result_oneOf_1_Rej:
      description: New-order-reject indicates that a new-order request was not applied.
      properties:
        msgSeqNum:
          format: uint64
          minimum: 0
          type: integer
        clientOrderId:
          description: The client order ID specified in the new-order request.
          format: uint64
          minimum: 0
          type: integer
        requestId:
          description: The request ID specified in the new-order request.
          format: uint64
          minimum: 0
          type: integer
        transactTime:
          description: "[Transact time](#transact-time)"
          format: uint64
          minimum: 0
          type: integer
        subaccountId:
          format: uint64
          minimum: 0
          type: integer
        reason:
          format: int32
          type: integer
        marketId:
          format: uint64
          minimum: 0
          type: integer
        price:
          format: uint64
          minimum: 0
          nullable: true
          type: integer
        quantity:
          format: uint64
          minimum: 0
          type: integer
        side:
          format: int32
          type: integer
        timeInForce:
          format: int32
          type: integer
        orderType:
          format: int32
          type: integer
      required:
      - clientOrderId
      - marketId
      - msgSeqNum
      - orderType
      - quantity
      - reason
      - requestId
      - side
      - subaccountId
      - timeInForce
      - transactTime
      type: object
    _orders_delete_request:
      description: "Cancel all resting orders, optionally limiting to a particular\
        \ market and / or order book side."
      properties:
        subaccountId:
          description: The subaccount to cancel orders for.
          format: uint64
          minimum: 0
          type: integer
        requestId:
          description: A request ID that is echoed back on the MassCancelAck and individual
            CancelOrderAck's.
          format: uint64
          minimum: 0
          type: integer
        marketId:
          description: "If specified, only orders on the corresponding market will\
            \ be canceled."
          format: uint64
          minimum: 0
          nullable: true
          type: integer
        side:
          description: "If specified, only orders with this side will be canceled."
          format: int32
          nullable: true
          type: integer
      required:
      - requestId
      - subaccountId
      type: object
    _order_delete_200_response_result:
      oneOf:
      - $ref: '#/components/schemas/_order_delete_200_response_result_oneOf'
      - $ref: '#/components/schemas/_order_delete_200_response_result_oneOf_1'
    _order_delete_200_response_result_oneOf_1:
      additionalProperties: false
      properties:
        Rej:
          $ref: '#/components/schemas/_order_delete_200_response_result_oneOf_1_Rej'
      required:
      - Rej
      type: object
    _order_patch_request:
      description: |-
        Modify a resting order. - If the `newPrice` and the current resting order's price is the same, and `newQuantity` is not greater, then the modify is considered a modify down, and the FIFO queue priority is maintained. Otherwise, the modify-order request is treated as an atomic cancel-replace and the replacement order is placed at the end of the FIFO queue for the new price level. - If post-only is specified and the replacement order would trade, then the request is rejected and the current resting order remains resting.

        Currently, in-flight-mitigation (IFM) is always enabled. That is, the cumulative fill qty is subtracted from `newQuantity` to calculate the new resting quantity. For example:

        ```text | Resting | Filled ---------+---------+-------- New 5    | 5       | 0 Fill 2   | 3       | 2 Modify 4 | 2       | 2 ```

        The post-modify quantity will be `newQuantity - filled = 4 - 2 = 2`.

        Regardless of IFM, the invariant for order quantity is that `quantity = remaining_quantity + cumulative_quantity`.
      properties:
        marketId:
          format: uint64
          minimum: 0
          type: integer
        clientOrderId:
          description: The order ID specified by the client on the NewOrder request.
          format: uint64
          minimum: 0
          type: integer
        requestId:
          description: A request ID that is echoed back on the ModifyOrderAck or ModifyOrderReject
          format: uint64
          minimum: 0
          type: integer
        newPrice:
          format: uint64
          minimum: 0
          type: integer
        newQuantity:
          format: uint64
          minimum: 0
          type: integer
        subaccountId:
          description: The subaccount that the NewOrder was placed on.
          format: uint64
          minimum: 0
          type: integer
        selfTradePrevention:
          format: int32
          nullable: true
          type: integer
        postOnly:
          format: int32
          type: integer
      required:
      - clientOrderId
      - marketId
      - newPrice
      - newQuantity
      - postOnly
      - requestId
      - subaccountId
      type: object
    _order_post_200_response:
      example:
        result:
          Ack:
            orderType: 2
            side: 9
            subaccountId: 0
            quantity: 0
            clientOrderId: 0
            cancelOnDisconnect: true
            marketId: 0
            requestId: 0
            price: 0
            transactTime: 0
            msgSeqNum: 0
            timeInForce: 3
            exchangeOrderId: 0
      properties:
        result:
          $ref: '#/components/schemas/_order_post_200_response_result'
      required:
      - result
      type: object
    _order_delete_200_response_result_oneOf_1_Rej:
      description: Cancel-order-reject indicates that a cancel-order request was not
        applied.
      properties:
        msgSeqNum:
          format: uint64
          minimum: 0
          type: integer
        clientOrderId:
          description: The client order ID specified in the cancel-order request.
          format: uint64
          minimum: 0
          type: integer
        requestId:
          description: The request ID specified in the cancel-order request.
          format: uint64
          minimum: 0
          type: integer
        transactTime:
          description: "[Transact time](#transact-time)"
          format: uint64
          minimum: 0
          type: integer
        subaccountId:
          format: uint64
          minimum: 0
          type: integer
        reason:
          format: int32
          type: integer
        marketId:
          format: uint64
          minimum: 0
          type: integer
      required:
      - clientOrderId
      - marketId
      - msgSeqNum
      - reason
      - requestId
      - subaccountId
      - transactTime
      type: object
    _positions_get_200_response:
      example:
        result:
        - total: total
          assetId: 0
          available: available
        - total: total
          assetId: 0
          available: available
      properties:
        result:
          items:
            $ref: '#/components/schemas/_positions_get_200_response_result_inner'
          type: array
      required:
      - result
      type: object
    _orders_get_200_response:
      example:
        result:
          orders:
          - remainingQuantity: 0
            orderType: 9
            side: 2
            restTime: 0
            subaccountId: 0
            clientOrderId: 0
            cancelOnDisconnect: true
            orderQuantity: 0
            marketId: 0
            cumulativeQuantity: 0
            price: 0
            timeInForce: 7
            exchangeOrderId: 0
          - remainingQuantity: 0
            orderType: 9
            side: 2
            restTime: 0
            subaccountId: 0
            clientOrderId: 0
            cancelOnDisconnect: true
            orderQuantity: 0
            marketId: 0
            cumulativeQuantity: 0
            price: 0
            timeInForce: 7
            exchangeOrderId: 0
      properties:
        result:
          $ref: '#/components/schemas/_orders_get_200_response_result'
      required:
      - result
      type: object
    _order_patch_200_response_result_oneOf_1_Rej:
      description: Modify-order-reject indicates that a modify-order request was not
        applied.
      properties:
        msgSeqNum:
          format: uint64
          minimum: 0
          type: integer
        clientOrderId:
          description: The client order ID specified in the modify-order request.
          format: uint64
          minimum: 0
          type: integer
        requestId:
          description: The request ID specified in the modify-order request.
          format: uint64
          minimum: 0
          type: integer
        transactTime:
          description: "[Transact time](#transact-time)"
          format: uint64
          minimum: 0
          type: integer
        subaccountId:
          format: uint64
          minimum: 0
          type: integer
        reason:
          format: int32
          type: integer
        marketId:
          format: uint64
          minimum: 0
          type: integer
      required:
      - clientOrderId
      - marketId
      - msgSeqNum
      - reason
      - requestId
      - subaccountId
      - transactTime
      type: object
    _order_patch_200_response_result:
      oneOf:
      - $ref: '#/components/schemas/_order_patch_200_response_result_oneOf'
      - $ref: '#/components/schemas/_order_patch_200_response_result_oneOf_1'
    _order_delete_200_response_result_oneOf_Ack:
      description: "Cancel-order-ack confirms a cancel request, or that an order has\
        \ been canceled as the result of a different user-initiated reason."
      example:
        reason: 2
        subaccountId: 0
        requestId: 0
        clientOrderId: 0
        transactTime: 0
        msgSeqNum: 0
        marketId: 0
        exchangeOrderId: 0
      properties:
        msgSeqNum:
          format: uint64
          minimum: 0
          type: integer
        clientOrderId:
          format: uint64
          minimum: 0
          type: integer
        requestId:
          description: "If the Reason is `DISCONNECT`, `IOC`, `STP_RESTING`, or `STP_AGGRESSING`,\
            \ this request ID will be `u64::MAX`. Otherwise, it will be the request\
            \ ID of the initiated cancel action. For a mass cancel, each cancel order\
            \ ack will have the MassCancel's request_id."
          format: uint64
          minimum: 0
          type: integer
        transactTime:
          description: "[Transact time](#transact-time)"
          format: uint64
          minimum: 0
          type: integer
        subaccountId:
          format: uint64
          minimum: 0
          type: integer
        reason:
          format: int32
          type: integer
        marketId:
          format: uint64
          minimum: 0
          type: integer
        exchangeOrderId:
          description: "[Exchange order ID](#exchange-order-id)"
          format: uint64
          minimum: 0
          type: integer
      required:
      - clientOrderId
      - exchangeOrderId
      - marketId
      - msgSeqNum
      - reason
      - requestId
      - subaccountId
      - transactTime
      type: object
    _order_post_200_response_result_oneOf:
      additionalProperties: false
      example:
        Ack:
          orderType: 2
          side: 9
          subaccountId: 0
          quantity: 0
          clientOrderId: 0
          cancelOnDisconnect: true
          marketId: 0
          requestId: 0
          price: 0
          transactTime: 0
          msgSeqNum: 0
          timeInForce: 3
          exchangeOrderId: 0
      properties:
        Ack:
          $ref: '#/components/schemas/_order_post_200_response_result_oneOf_Ack'
      required:
      - Ack
      type: object
    _order_patch_200_response:
      example:
        result:
          Ack:
            remainingQuantity: 0
            cumulativeQuantity: 0
            subaccountId: 0
            quantity: 0
            requestId: 0
            price: 0
            clientOrderId: 0
            transactTime: 0
            msgSeqNum: 0
            marketId: 0
            exchangeOrderId: 0
      properties:
        result:
          $ref: '#/components/schemas/_order_patch_200_response_result'
      required:
      - result
      type: object
    _order_delete_200_response_result_oneOf:
      additionalProperties: false
      example:
        Ack:
          reason: 2
          subaccountId: 0
          requestId: 0
          clientOrderId: 0
          transactTime: 0
          msgSeqNum: 0
          marketId: 0
          exchangeOrderId: 0
      properties:
        Ack:
          $ref: '#/components/schemas/_order_delete_200_response_result_oneOf_Ack'
      required:
      - Ack
      type: object
    _order_post_200_response_result_oneOf_1:
      additionalProperties: false
      properties:
        Rej:
          $ref: '#/components/schemas/_order_post_200_response_result_oneOf_1_Rej'
      required:
      - Rej
      type: object
    _orders_delete_200_response_result:
      description: "Mass-cancel-ack confirms a mass-cancel request. If `reason` is\
        \ set, the mass cancel was not applied and there are no affected orders. Individual\
        \ CancelOrderAck's will be sent for each order that was affected."
      example:
        reason: 5
        subaccountId: 0
        totalAffectedOrders: 0
        requestId: 0
        transactTime: 0
        msgSeqNum: 0
      properties:
        msgSeqNum:
          format: uint64
          minimum: 0
          type: integer
        subaccountId:
          format: uint64
          minimum: 0
          type: integer
        requestId:
          description: The request ID specified in the mass-cancel request.
          format: uint64
          minimum: 0
          type: integer
        transactTime:
          description: "[Transact time](#transact-time)"
          format: uint64
          minimum: 0
          type: integer
        reason:
          format: int32
          nullable: true
          type: integer
        totalAffectedOrders:
          description: The total number of orders that were canceled.
          format: uint32
          minimum: 0
          type: integer
      required:
      - msgSeqNum
      - requestId
      - subaccountId
      - totalAffectedOrders
      - transactTime
      type: object
    _order_patch_200_response_result_oneOf_Ack:
      description: "Modify-order-ack confirms a modify-order request. If the modify\
        \ resulted in an aggressing cancel-replace, the ack will be ordered before\
        \ any fills for this order."
      example:
        remainingQuantity: 0
        cumulativeQuantity: 0
        subaccountId: 0
        quantity: 0
        requestId: 0
        price: 0
        clientOrderId: 0
        transactTime: 0
        msgSeqNum: 0
        marketId: 0
        exchangeOrderId: 0
      properties:
        msgSeqNum:
          format: uint64
          minimum: 0
          type: integer
        clientOrderId:
          format: uint64
          minimum: 0
          type: integer
        requestId:
          description: The request ID specified in the modify request.
          format: uint64
          minimum: 0
          type: integer
        transactTime:
          description: "[Transact time](#transact-time)"
          format: uint64
          minimum: 0
          type: integer
        remainingQuantity:
          description: The quantity remaining on the book after applying the modify
            request.
          format: uint64
          minimum: 0
          type: integer
        subaccountId:
          format: uint64
          minimum: 0
          type: integer
        marketId:
          format: uint64
          minimum: 0
          type: integer
        price:
          format: uint64
          minimum: 0
          type: integer
        quantity:
          description: The quantity submitted in the modify request.
          format: uint64
          minimum: 0
          type: integer
        cumulativeQuantity:
          description: The cumulative filled quantity for this order.
          format: uint64
          minimum: 0
          type: integer
        exchangeOrderId:
          description: "[Exchange order ID](#exchange-order-id)"
          format: uint64
          minimum: 0
          type: integer
      required:
      - clientOrderId
      - cumulativeQuantity
      - exchangeOrderId
      - marketId
      - msgSeqNum
      - price
      - quantity
      - remainingQuantity
      - requestId
      - subaccountId
      - transactTime
      type: object
    _orders_get_200_response_result:
      example:
        orders:
        - remainingQuantity: 0
          orderType: 9
          side: 2
          restTime: 0
          subaccountId: 0
          clientOrderId: 0
          cancelOnDisconnect: true
          orderQuantity: 0
          marketId: 0
          cumulativeQuantity: 0
          price: 0
          timeInForce: 7
          exchangeOrderId: 0
        - remainingQuantity: 0
          orderType: 9
          side: 2
          restTime: 0
          subaccountId: 0
          clientOrderId: 0
          cancelOnDisconnect: true
          orderQuantity: 0
          marketId: 0
          cumulativeQuantity: 0
          price: 0
          timeInForce: 7
          exchangeOrderId: 0
      properties:
        orders:
          items:
            $ref: '#/components/schemas/_orders_get_200_response_result_orders_inner'
          type: array
      required:
      - orders
      type: object
    _orders_delete_200_response:
      example:
        result:
          reason: 5
          subaccountId: 0
          totalAffectedOrders: 0
          requestId: 0
          transactTime: 0
          msgSeqNum: 0
      properties:
        result:
          $ref: '#/components/schemas/_orders_delete_200_response_result'
      required:
      - result
      type: object
    _order_post_200_response_result:
      oneOf:
      - $ref: '#/components/schemas/_order_post_200_response_result_oneOf'
      - $ref: '#/components/schemas/_order_post_200_response_result_oneOf_1'
    _order_patch_200_response_result_oneOf_1:
      additionalProperties: false
      properties:
        Rej:
          $ref: '#/components/schemas/_order_patch_200_response_result_oneOf_1_Rej'
      required:
      - Rej
      type: object
    _orders_get_200_response_result_orders_inner:
      description: A resting order. Sent on bootstrap in `RestingOrders`.
      example:
        remainingQuantity: 0
        orderType: 9
        side: 2
        restTime: 0
        subaccountId: 0
        clientOrderId: 0
        cancelOnDisconnect: true
        orderQuantity: 0
        marketId: 0
        cumulativeQuantity: 0
        price: 0
        timeInForce: 7
        exchangeOrderId: 0
      properties:
        clientOrderId:
          description: The client order ID specified in the new-order request.
          format: uint64
          minimum: 0
          type: integer
        exchangeOrderId:
          description: "[Exchange order ID](#exchange-order-id)"
          format: uint64
          minimum: 0
          type: integer
        marketId:
          format: uint64
          minimum: 0
          type: integer
        price:
          format: uint64
          minimum: 0
          type: integer
        orderQuantity:
          description: "The quantity submitted in the latest quantity-modifying request.\
            \ If the order has not been modified, then it is the quantity on the new-order-ack.\
            \ If it has been modified, then it is the quantity of the latest modify-order-ack."
          format: uint64
          minimum: 0
          type: integer
        side:
          format: int32
          type: integer
        timeInForce:
          format: int32
          type: integer
        orderType:
          format: int32
          type: integer
        remainingQuantity:
          description: The current remaining quantity on the book.
          format: uint64
          minimum: 0
          type: integer
        restTime:
          description: "[Transact time](#transact-time) of the NewOrderAck"
          format: uint64
          minimum: 0
          type: integer
        subaccountId:
          format: uint64
          minimum: 0
          type: integer
        cumulativeQuantity:
          description: The cumulative filled quantity for this order.
          format: uint64
          minimum: 0
          type: integer
        cancelOnDisconnect:
          type: boolean
      required:
      - cancelOnDisconnect
      - clientOrderId
      - cumulativeQuantity
      - exchangeOrderId
      - marketId
      - orderQuantity
      - orderType
      - price
      - remainingQuantity
      - restTime
      - side
      - subaccountId
      - timeInForce
      type: object
    _order_post_request:
      description: Place a new order.
      properties:
        clientOrderId:
          description: A unique order ID assigned by the client for this order. The
            ID must be unique among open orders by this subaccount.
          format: uint64
          minimum: 0
          type: integer
        requestId:
          description: A request ID that is echoed back on the NewOrderAck or NewOrderReject
          format: uint64
          minimum: 0
          type: integer
        marketId:
          format: uint64
          minimum: 0
          type: integer
        price:
          format: uint64
          minimum: 0
          nullable: true
          type: integer
        quantity:
          format: uint64
          minimum: 0
          type: integer
        side:
          format: int32
          type: integer
        timeInForce:
          format: int32
          type: integer
        orderType:
          format: int32
          type: integer
        subaccountId:
          description: The subaccount to place this order on. This subaccount must
            be writable by the API key specified in the Credentials message.
          format: uint64
          minimum: 0
          type: integer
        selfTradePrevention:
          format: int32
          nullable: true
          type: integer
        postOnly:
          format: int32
          type: integer
        cancelOnDisconnect:
          description: |-
            If true, this order will be automatically cancelled after the closure of the network connection between Cube's servers and the client that placed the order.

            If the client initiates the disconnect or network instability drops the connection, the order will be cancelled when Cube's servers recognize the disconnection.

            In the event of a server-side disconnect that causes a halt in trading, such as scheduled downtime, the order will be cancelled before trading resumes.
          type: boolean
      required:
      - cancelOnDisconnect
      - clientOrderId
      - marketId
      - orderType
      - postOnly
      - quantity
      - requestId
      - side
      - subaccountId
      - timeInForce
      type: object
    _positions_get_200_response_result_inner:
      example:
        total: total
        assetId: 0
        available: available
      properties:
        assetId:
          format: uint64
          minimum: 0
          type: integer
        total:
          format: number
          type: string
        available:
          format: number
          type: string
      required:
      - assetId
      - available
      - total
      type: object
    _orders_get_500_response:
      example:
        error: example error string
      properties:
        error:
          type: string
      required:
      - error
      type: object
    _order_delete_200_response:
      example:
        result:
          Ack:
            reason: 2
            subaccountId: 0
            requestId: 0
            clientOrderId: 0
            transactTime: 0
            msgSeqNum: 0
            marketId: 0
            exchangeOrderId: 0
      properties:
        result:
          $ref: '#/components/schemas/_order_delete_200_response_result'
      required:
      - result
      type: object
    _order_post_200_response_result_oneOf_Ack:
      description: New-order-ack confirms a new-order request. The ack will be ordered
        before any fills for this order.
      example:
        orderType: 2
        side: 9
        subaccountId: 0
        quantity: 0
        clientOrderId: 0
        cancelOnDisconnect: true
        marketId: 0
        requestId: 0
        price: 0
        transactTime: 0
        msgSeqNum: 0
        timeInForce: 3
        exchangeOrderId: 0
      properties:
        msgSeqNum:
          format: uint64
          minimum: 0
          type: integer
        clientOrderId:
          description: The client order ID specified in the new-order request.
          format: uint64
          minimum: 0
          type: integer
        requestId:
          description: The request ID specified in the new-order request.
          format: uint64
          minimum: 0
          type: integer
        exchangeOrderId:
          description: "[Exchange order ID](#exchange-order-id)"
          format: uint64
          minimum: 0
          type: integer
        marketId:
          format: uint64
          minimum: 0
          type: integer
        price:
          description: "If the order ultimately rests, the `price` field will include\
            \ the resting price."
          format: uint64
          minimum: 0
          nullable: true
          type: integer
        quantity:
          description: The quantity submitted in the new-order request.
          format: uint64
          minimum: 0
          type: integer
        side:
          format: int32
          type: integer
        timeInForce:
          format: int32
          type: integer
        orderType:
          format: int32
          type: integer
        transactTime:
          description: "[Transact time](#transact-time)"
          format: uint64
          minimum: 0
          type: integer
        subaccountId:
          format: uint64
          minimum: 0
          type: integer
        cancelOnDisconnect:
          type: boolean
      required:
      - cancelOnDisconnect
      - clientOrderId
      - exchangeOrderId
      - marketId
      - msgSeqNum
      - orderType
      - quantity
      - requestId
      - side
      - subaccountId
      - timeInForce
      - transactTime
      type: object
    _order_delete_request:
      description: Cancel a resting order. Note that this can be done before the order
        is acknowledged (an aggressive cancel) since the identifying field is the
        `client_order_id`.
      properties:
        marketId:
          format: uint64
          minimum: 0
          type: integer
        clientOrderId:
          description: The order ID specified by the client on the NewOrder request.
          format: uint64
          minimum: 0
          type: integer
        requestId:
          description: A request ID that is echoed back on the CancelOrderAck or CancelOrderReject
          format: uint64
          minimum: 0
          type: integer
        subaccountId:
          description: The subaccount that the NewOrder was placed on.
          format: uint64
          minimum: 0
          type: integer
      required:
      - clientOrderId
      - marketId
      - requestId
      - subaccountId
      type: object
    _order_patch_200_response_result_oneOf:
      additionalProperties: false
      example:
        Ack:
          remainingQuantity: 0
          cumulativeQuantity: 0
          subaccountId: 0
          quantity: 0
          requestId: 0
          price: 0
          clientOrderId: 0
          transactTime: 0
          msgSeqNum: 0
          marketId: 0
          exchangeOrderId: 0
      properties:
        Ack:
          $ref: '#/components/schemas/_order_patch_200_response_result_oneOf_Ack'
      required:
      - Ack
      type: object
  securitySchemes:
    ApiKey:
      description: |
        The API Key ID as specified in the [API settings page](https://cube.exchange/settings/api).

        Each API key has a corresponding access level that is set when the key is created.
        - Read access only allows access to read HTTP methods (GET, HEAD, etc.).
        - Write access allows access to all HTTP methods.
      in: header
      name: x-api-key
      type: apiKey
    ApiSignature:
      description: |
        The API signature string authenticating this request.

        The payload to be signed is the concatenation of the byte string `cube.xyz` and the current unix epoch timestamp in seconds converted into an 8-byte little-endian array. The signature is the HMAC-SHA256 digest of the payload using the secret key associated with the specified API key.

        Implementation notes:
        - The signature is base-64 encoded with the 'standard' alphabet and
          padding.

          ```
          ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
          ```
        - The timestamp should be encoded as 8-byte little-endian (array of bytes)
        - The secret key should be decoded from a hex string into a 32-byte array of
          bytes
      in: header
      name: x-api-signature
      type: apiKey
    ApiTimestamp:
      description: The timestamp used for signature generation.
      in: header
      name: x-api-timestamp
      type: apiKey
