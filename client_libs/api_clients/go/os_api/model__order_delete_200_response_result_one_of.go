/*
Cube Osmium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderDelete200ResponseResultOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderDelete200ResponseResultOneOf{}

// OrderDelete200ResponseResultOneOf struct for OrderDelete200ResponseResultOneOf
type OrderDelete200ResponseResultOneOf struct {
	Ack OrderDelete200ResponseResultOneOfAck `json:"Ack"`
}

type _OrderDelete200ResponseResultOneOf OrderDelete200ResponseResultOneOf

// NewOrderDelete200ResponseResultOneOf instantiates a new OrderDelete200ResponseResultOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderDelete200ResponseResultOneOf(ack OrderDelete200ResponseResultOneOfAck) *OrderDelete200ResponseResultOneOf {
	this := OrderDelete200ResponseResultOneOf{}
	this.Ack = ack
	return &this
}

// NewOrderDelete200ResponseResultOneOfWithDefaults instantiates a new OrderDelete200ResponseResultOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderDelete200ResponseResultOneOfWithDefaults() *OrderDelete200ResponseResultOneOf {
	this := OrderDelete200ResponseResultOneOf{}
	return &this
}

// GetAck returns the Ack field value
func (o *OrderDelete200ResponseResultOneOf) GetAck() OrderDelete200ResponseResultOneOfAck {
	if o == nil {
		var ret OrderDelete200ResponseResultOneOfAck
		return ret
	}

	return o.Ack
}

// GetAckOk returns a tuple with the Ack field value
// and a boolean to check if the value has been set.
func (o *OrderDelete200ResponseResultOneOf) GetAckOk() (*OrderDelete200ResponseResultOneOfAck, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ack, true
}

// SetAck sets field value
func (o *OrderDelete200ResponseResultOneOf) SetAck(v OrderDelete200ResponseResultOneOfAck) {
	o.Ack = v
}

func (o OrderDelete200ResponseResultOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderDelete200ResponseResultOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Ack"] = o.Ack
	return toSerialize, nil
}

func (o *OrderDelete200ResponseResultOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Ack",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderDelete200ResponseResultOneOf := _OrderDelete200ResponseResultOneOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderDelete200ResponseResultOneOf)

	if err != nil {
		return err
	}

	*o = OrderDelete200ResponseResultOneOf(varOrderDelete200ResponseResultOneOf)

	return err
}

type NullableOrderDelete200ResponseResultOneOf struct {
	value *OrderDelete200ResponseResultOneOf
	isSet bool
}

func (v NullableOrderDelete200ResponseResultOneOf) Get() *OrderDelete200ResponseResultOneOf {
	return v.value
}

func (v *NullableOrderDelete200ResponseResultOneOf) Set(val *OrderDelete200ResponseResultOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderDelete200ResponseResultOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderDelete200ResponseResultOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderDelete200ResponseResultOneOf(val *OrderDelete200ResponseResultOneOf) *NullableOrderDelete200ResponseResultOneOf {
	return &NullableOrderDelete200ResponseResultOneOf{value: val, isSet: true}
}

func (v NullableOrderDelete200ResponseResultOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderDelete200ResponseResultOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


