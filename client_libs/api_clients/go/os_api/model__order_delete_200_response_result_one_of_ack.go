/*
Cube Osmium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderDelete200ResponseResultOneOfAck type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderDelete200ResponseResultOneOfAck{}

// OrderDelete200ResponseResultOneOfAck Cancel-order-ack confirms a cancel request, or that an order has been canceled as the result of a different user-initiated reason.
type OrderDelete200ResponseResultOneOfAck struct {
	MsgSeqNum int32 `json:"msgSeqNum"`
	ClientOrderId int32 `json:"clientOrderId"`
	// If the Reason is `DISCONNECT`, `IOC`, `STP_RESTING`, or `STP_AGGRESSING`, this request ID will be `u64::MAX`. Otherwise, it will be the request ID of the initiated cancel action. For a mass cancel, each cancel order ack will have the MassCancel's request_id.
	RequestId int32 `json:"requestId"`
	// [Transact time](#transact-time)
	TransactTime int32 `json:"transactTime"`
	SubaccountId int32 `json:"subaccountId"`
	Reason int32 `json:"reason"`
	MarketId int32 `json:"marketId"`
	// [Exchange order ID](#exchange-order-id)
	ExchangeOrderId int32 `json:"exchangeOrderId"`
}

type _OrderDelete200ResponseResultOneOfAck OrderDelete200ResponseResultOneOfAck

// NewOrderDelete200ResponseResultOneOfAck instantiates a new OrderDelete200ResponseResultOneOfAck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderDelete200ResponseResultOneOfAck(msgSeqNum int32, clientOrderId int32, requestId int32, transactTime int32, subaccountId int32, reason int32, marketId int32, exchangeOrderId int32) *OrderDelete200ResponseResultOneOfAck {
	this := OrderDelete200ResponseResultOneOfAck{}
	this.MsgSeqNum = msgSeqNum
	this.ClientOrderId = clientOrderId
	this.RequestId = requestId
	this.TransactTime = transactTime
	this.SubaccountId = subaccountId
	this.Reason = reason
	this.MarketId = marketId
	this.ExchangeOrderId = exchangeOrderId
	return &this
}

// NewOrderDelete200ResponseResultOneOfAckWithDefaults instantiates a new OrderDelete200ResponseResultOneOfAck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderDelete200ResponseResultOneOfAckWithDefaults() *OrderDelete200ResponseResultOneOfAck {
	this := OrderDelete200ResponseResultOneOfAck{}
	return &this
}

// GetMsgSeqNum returns the MsgSeqNum field value
func (o *OrderDelete200ResponseResultOneOfAck) GetMsgSeqNum() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MsgSeqNum
}

// GetMsgSeqNumOk returns a tuple with the MsgSeqNum field value
// and a boolean to check if the value has been set.
func (o *OrderDelete200ResponseResultOneOfAck) GetMsgSeqNumOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MsgSeqNum, true
}

// SetMsgSeqNum sets field value
func (o *OrderDelete200ResponseResultOneOfAck) SetMsgSeqNum(v int32) {
	o.MsgSeqNum = v
}

// GetClientOrderId returns the ClientOrderId field value
func (o *OrderDelete200ResponseResultOneOfAck) GetClientOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value
// and a boolean to check if the value has been set.
func (o *OrderDelete200ResponseResultOneOfAck) GetClientOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientOrderId, true
}

// SetClientOrderId sets field value
func (o *OrderDelete200ResponseResultOneOfAck) SetClientOrderId(v int32) {
	o.ClientOrderId = v
}

// GetRequestId returns the RequestId field value
func (o *OrderDelete200ResponseResultOneOfAck) GetRequestId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *OrderDelete200ResponseResultOneOfAck) GetRequestIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *OrderDelete200ResponseResultOneOfAck) SetRequestId(v int32) {
	o.RequestId = v
}

// GetTransactTime returns the TransactTime field value
func (o *OrderDelete200ResponseResultOneOfAck) GetTransactTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TransactTime
}

// GetTransactTimeOk returns a tuple with the TransactTime field value
// and a boolean to check if the value has been set.
func (o *OrderDelete200ResponseResultOneOfAck) GetTransactTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactTime, true
}

// SetTransactTime sets field value
func (o *OrderDelete200ResponseResultOneOfAck) SetTransactTime(v int32) {
	o.TransactTime = v
}

// GetSubaccountId returns the SubaccountId field value
func (o *OrderDelete200ResponseResultOneOfAck) GetSubaccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SubaccountId
}

// GetSubaccountIdOk returns a tuple with the SubaccountId field value
// and a boolean to check if the value has been set.
func (o *OrderDelete200ResponseResultOneOfAck) GetSubaccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubaccountId, true
}

// SetSubaccountId sets field value
func (o *OrderDelete200ResponseResultOneOfAck) SetSubaccountId(v int32) {
	o.SubaccountId = v
}

// GetReason returns the Reason field value
func (o *OrderDelete200ResponseResultOneOfAck) GetReason() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *OrderDelete200ResponseResultOneOfAck) GetReasonOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *OrderDelete200ResponseResultOneOfAck) SetReason(v int32) {
	o.Reason = v
}

// GetMarketId returns the MarketId field value
func (o *OrderDelete200ResponseResultOneOfAck) GetMarketId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value
// and a boolean to check if the value has been set.
func (o *OrderDelete200ResponseResultOneOfAck) GetMarketIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarketId, true
}

// SetMarketId sets field value
func (o *OrderDelete200ResponseResultOneOfAck) SetMarketId(v int32) {
	o.MarketId = v
}

// GetExchangeOrderId returns the ExchangeOrderId field value
func (o *OrderDelete200ResponseResultOneOfAck) GetExchangeOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExchangeOrderId
}

// GetExchangeOrderIdOk returns a tuple with the ExchangeOrderId field value
// and a boolean to check if the value has been set.
func (o *OrderDelete200ResponseResultOneOfAck) GetExchangeOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExchangeOrderId, true
}

// SetExchangeOrderId sets field value
func (o *OrderDelete200ResponseResultOneOfAck) SetExchangeOrderId(v int32) {
	o.ExchangeOrderId = v
}

func (o OrderDelete200ResponseResultOneOfAck) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderDelete200ResponseResultOneOfAck) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["msgSeqNum"] = o.MsgSeqNum
	toSerialize["clientOrderId"] = o.ClientOrderId
	toSerialize["requestId"] = o.RequestId
	toSerialize["transactTime"] = o.TransactTime
	toSerialize["subaccountId"] = o.SubaccountId
	toSerialize["reason"] = o.Reason
	toSerialize["marketId"] = o.MarketId
	toSerialize["exchangeOrderId"] = o.ExchangeOrderId
	return toSerialize, nil
}

func (o *OrderDelete200ResponseResultOneOfAck) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"msgSeqNum",
		"clientOrderId",
		"requestId",
		"transactTime",
		"subaccountId",
		"reason",
		"marketId",
		"exchangeOrderId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderDelete200ResponseResultOneOfAck := _OrderDelete200ResponseResultOneOfAck{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderDelete200ResponseResultOneOfAck)

	if err != nil {
		return err
	}

	*o = OrderDelete200ResponseResultOneOfAck(varOrderDelete200ResponseResultOneOfAck)

	return err
}

type NullableOrderDelete200ResponseResultOneOfAck struct {
	value *OrderDelete200ResponseResultOneOfAck
	isSet bool
}

func (v NullableOrderDelete200ResponseResultOneOfAck) Get() *OrderDelete200ResponseResultOneOfAck {
	return v.value
}

func (v *NullableOrderDelete200ResponseResultOneOfAck) Set(val *OrderDelete200ResponseResultOneOfAck) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderDelete200ResponseResultOneOfAck) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderDelete200ResponseResultOneOfAck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderDelete200ResponseResultOneOfAck(val *OrderDelete200ResponseResultOneOfAck) *NullableOrderDelete200ResponseResultOneOfAck {
	return &NullableOrderDelete200ResponseResultOneOfAck{value: val, isSet: true}
}

func (v NullableOrderDelete200ResponseResultOneOfAck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderDelete200ResponseResultOneOfAck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


