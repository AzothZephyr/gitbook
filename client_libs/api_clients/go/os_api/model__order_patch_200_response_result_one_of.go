/*
Cube Osmium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderPatch200ResponseResultOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderPatch200ResponseResultOneOf{}

// OrderPatch200ResponseResultOneOf struct for OrderPatch200ResponseResultOneOf
type OrderPatch200ResponseResultOneOf struct {
	Ack OrderPatch200ResponseResultOneOfAck `json:"Ack"`
}

type _OrderPatch200ResponseResultOneOf OrderPatch200ResponseResultOneOf

// NewOrderPatch200ResponseResultOneOf instantiates a new OrderPatch200ResponseResultOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderPatch200ResponseResultOneOf(ack OrderPatch200ResponseResultOneOfAck) *OrderPatch200ResponseResultOneOf {
	this := OrderPatch200ResponseResultOneOf{}
	this.Ack = ack
	return &this
}

// NewOrderPatch200ResponseResultOneOfWithDefaults instantiates a new OrderPatch200ResponseResultOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderPatch200ResponseResultOneOfWithDefaults() *OrderPatch200ResponseResultOneOf {
	this := OrderPatch200ResponseResultOneOf{}
	return &this
}

// GetAck returns the Ack field value
func (o *OrderPatch200ResponseResultOneOf) GetAck() OrderPatch200ResponseResultOneOfAck {
	if o == nil {
		var ret OrderPatch200ResponseResultOneOfAck
		return ret
	}

	return o.Ack
}

// GetAckOk returns a tuple with the Ack field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOf) GetAckOk() (*OrderPatch200ResponseResultOneOfAck, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ack, true
}

// SetAck sets field value
func (o *OrderPatch200ResponseResultOneOf) SetAck(v OrderPatch200ResponseResultOneOfAck) {
	o.Ack = v
}

func (o OrderPatch200ResponseResultOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderPatch200ResponseResultOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Ack"] = o.Ack
	return toSerialize, nil
}

func (o *OrderPatch200ResponseResultOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Ack",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderPatch200ResponseResultOneOf := _OrderPatch200ResponseResultOneOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderPatch200ResponseResultOneOf)

	if err != nil {
		return err
	}

	*o = OrderPatch200ResponseResultOneOf(varOrderPatch200ResponseResultOneOf)

	return err
}

type NullableOrderPatch200ResponseResultOneOf struct {
	value *OrderPatch200ResponseResultOneOf
	isSet bool
}

func (v NullableOrderPatch200ResponseResultOneOf) Get() *OrderPatch200ResponseResultOneOf {
	return v.value
}

func (v *NullableOrderPatch200ResponseResultOneOf) Set(val *OrderPatch200ResponseResultOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderPatch200ResponseResultOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderPatch200ResponseResultOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderPatch200ResponseResultOneOf(val *OrderPatch200ResponseResultOneOf) *NullableOrderPatch200ResponseResultOneOf {
	return &NullableOrderPatch200ResponseResultOneOf{value: val, isSet: true}
}

func (v NullableOrderPatch200ResponseResultOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderPatch200ResponseResultOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


