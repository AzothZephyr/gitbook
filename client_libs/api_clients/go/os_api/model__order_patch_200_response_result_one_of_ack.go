/*
Cube Osmium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderPatch200ResponseResultOneOfAck type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderPatch200ResponseResultOneOfAck{}

// OrderPatch200ResponseResultOneOfAck Modify-order-ack confirms a modify-order request. If the modify resulted in an aggressing cancel-replace, the ack will be ordered before any fills for this order.
type OrderPatch200ResponseResultOneOfAck struct {
	MsgSeqNum int32 `json:"msgSeqNum"`
	ClientOrderId int32 `json:"clientOrderId"`
	// The request ID specified in the modify request.
	RequestId int32 `json:"requestId"`
	// [Transact time](#transact-time)
	TransactTime int32 `json:"transactTime"`
	// The quantity remaining on the book after applying the modify request.
	RemainingQuantity int32 `json:"remainingQuantity"`
	SubaccountId int32 `json:"subaccountId"`
	MarketId int32 `json:"marketId"`
	Price int32 `json:"price"`
	// The quantity submitted in the modify request.
	Quantity int32 `json:"quantity"`
	// The cumulative filled quantity for this order.
	CumulativeQuantity int32 `json:"cumulativeQuantity"`
	// [Exchange order ID](#exchange-order-id)
	ExchangeOrderId int32 `json:"exchangeOrderId"`
}

type _OrderPatch200ResponseResultOneOfAck OrderPatch200ResponseResultOneOfAck

// NewOrderPatch200ResponseResultOneOfAck instantiates a new OrderPatch200ResponseResultOneOfAck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderPatch200ResponseResultOneOfAck(msgSeqNum int32, clientOrderId int32, requestId int32, transactTime int32, remainingQuantity int32, subaccountId int32, marketId int32, price int32, quantity int32, cumulativeQuantity int32, exchangeOrderId int32) *OrderPatch200ResponseResultOneOfAck {
	this := OrderPatch200ResponseResultOneOfAck{}
	this.MsgSeqNum = msgSeqNum
	this.ClientOrderId = clientOrderId
	this.RequestId = requestId
	this.TransactTime = transactTime
	this.RemainingQuantity = remainingQuantity
	this.SubaccountId = subaccountId
	this.MarketId = marketId
	this.Price = price
	this.Quantity = quantity
	this.CumulativeQuantity = cumulativeQuantity
	this.ExchangeOrderId = exchangeOrderId
	return &this
}

// NewOrderPatch200ResponseResultOneOfAckWithDefaults instantiates a new OrderPatch200ResponseResultOneOfAck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderPatch200ResponseResultOneOfAckWithDefaults() *OrderPatch200ResponseResultOneOfAck {
	this := OrderPatch200ResponseResultOneOfAck{}
	return &this
}

// GetMsgSeqNum returns the MsgSeqNum field value
func (o *OrderPatch200ResponseResultOneOfAck) GetMsgSeqNum() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MsgSeqNum
}

// GetMsgSeqNumOk returns a tuple with the MsgSeqNum field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOfAck) GetMsgSeqNumOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MsgSeqNum, true
}

// SetMsgSeqNum sets field value
func (o *OrderPatch200ResponseResultOneOfAck) SetMsgSeqNum(v int32) {
	o.MsgSeqNum = v
}

// GetClientOrderId returns the ClientOrderId field value
func (o *OrderPatch200ResponseResultOneOfAck) GetClientOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOfAck) GetClientOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientOrderId, true
}

// SetClientOrderId sets field value
func (o *OrderPatch200ResponseResultOneOfAck) SetClientOrderId(v int32) {
	o.ClientOrderId = v
}

// GetRequestId returns the RequestId field value
func (o *OrderPatch200ResponseResultOneOfAck) GetRequestId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOfAck) GetRequestIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *OrderPatch200ResponseResultOneOfAck) SetRequestId(v int32) {
	o.RequestId = v
}

// GetTransactTime returns the TransactTime field value
func (o *OrderPatch200ResponseResultOneOfAck) GetTransactTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TransactTime
}

// GetTransactTimeOk returns a tuple with the TransactTime field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOfAck) GetTransactTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactTime, true
}

// SetTransactTime sets field value
func (o *OrderPatch200ResponseResultOneOfAck) SetTransactTime(v int32) {
	o.TransactTime = v
}

// GetRemainingQuantity returns the RemainingQuantity field value
func (o *OrderPatch200ResponseResultOneOfAck) GetRemainingQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RemainingQuantity
}

// GetRemainingQuantityOk returns a tuple with the RemainingQuantity field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOfAck) GetRemainingQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemainingQuantity, true
}

// SetRemainingQuantity sets field value
func (o *OrderPatch200ResponseResultOneOfAck) SetRemainingQuantity(v int32) {
	o.RemainingQuantity = v
}

// GetSubaccountId returns the SubaccountId field value
func (o *OrderPatch200ResponseResultOneOfAck) GetSubaccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SubaccountId
}

// GetSubaccountIdOk returns a tuple with the SubaccountId field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOfAck) GetSubaccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubaccountId, true
}

// SetSubaccountId sets field value
func (o *OrderPatch200ResponseResultOneOfAck) SetSubaccountId(v int32) {
	o.SubaccountId = v
}

// GetMarketId returns the MarketId field value
func (o *OrderPatch200ResponseResultOneOfAck) GetMarketId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOfAck) GetMarketIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarketId, true
}

// SetMarketId sets field value
func (o *OrderPatch200ResponseResultOneOfAck) SetMarketId(v int32) {
	o.MarketId = v
}

// GetPrice returns the Price field value
func (o *OrderPatch200ResponseResultOneOfAck) GetPrice() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOfAck) GetPriceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *OrderPatch200ResponseResultOneOfAck) SetPrice(v int32) {
	o.Price = v
}

// GetQuantity returns the Quantity field value
func (o *OrderPatch200ResponseResultOneOfAck) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOfAck) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *OrderPatch200ResponseResultOneOfAck) SetQuantity(v int32) {
	o.Quantity = v
}

// GetCumulativeQuantity returns the CumulativeQuantity field value
func (o *OrderPatch200ResponseResultOneOfAck) GetCumulativeQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CumulativeQuantity
}

// GetCumulativeQuantityOk returns a tuple with the CumulativeQuantity field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOfAck) GetCumulativeQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CumulativeQuantity, true
}

// SetCumulativeQuantity sets field value
func (o *OrderPatch200ResponseResultOneOfAck) SetCumulativeQuantity(v int32) {
	o.CumulativeQuantity = v
}

// GetExchangeOrderId returns the ExchangeOrderId field value
func (o *OrderPatch200ResponseResultOneOfAck) GetExchangeOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExchangeOrderId
}

// GetExchangeOrderIdOk returns a tuple with the ExchangeOrderId field value
// and a boolean to check if the value has been set.
func (o *OrderPatch200ResponseResultOneOfAck) GetExchangeOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExchangeOrderId, true
}

// SetExchangeOrderId sets field value
func (o *OrderPatch200ResponseResultOneOfAck) SetExchangeOrderId(v int32) {
	o.ExchangeOrderId = v
}

func (o OrderPatch200ResponseResultOneOfAck) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderPatch200ResponseResultOneOfAck) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["msgSeqNum"] = o.MsgSeqNum
	toSerialize["clientOrderId"] = o.ClientOrderId
	toSerialize["requestId"] = o.RequestId
	toSerialize["transactTime"] = o.TransactTime
	toSerialize["remainingQuantity"] = o.RemainingQuantity
	toSerialize["subaccountId"] = o.SubaccountId
	toSerialize["marketId"] = o.MarketId
	toSerialize["price"] = o.Price
	toSerialize["quantity"] = o.Quantity
	toSerialize["cumulativeQuantity"] = o.CumulativeQuantity
	toSerialize["exchangeOrderId"] = o.ExchangeOrderId
	return toSerialize, nil
}

func (o *OrderPatch200ResponseResultOneOfAck) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"msgSeqNum",
		"clientOrderId",
		"requestId",
		"transactTime",
		"remainingQuantity",
		"subaccountId",
		"marketId",
		"price",
		"quantity",
		"cumulativeQuantity",
		"exchangeOrderId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderPatch200ResponseResultOneOfAck := _OrderPatch200ResponseResultOneOfAck{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderPatch200ResponseResultOneOfAck)

	if err != nil {
		return err
	}

	*o = OrderPatch200ResponseResultOneOfAck(varOrderPatch200ResponseResultOneOfAck)

	return err
}

type NullableOrderPatch200ResponseResultOneOfAck struct {
	value *OrderPatch200ResponseResultOneOfAck
	isSet bool
}

func (v NullableOrderPatch200ResponseResultOneOfAck) Get() *OrderPatch200ResponseResultOneOfAck {
	return v.value
}

func (v *NullableOrderPatch200ResponseResultOneOfAck) Set(val *OrderPatch200ResponseResultOneOfAck) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderPatch200ResponseResultOneOfAck) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderPatch200ResponseResultOneOfAck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderPatch200ResponseResultOneOfAck(val *OrderPatch200ResponseResultOneOfAck) *NullableOrderPatch200ResponseResultOneOfAck {
	return &NullableOrderPatch200ResponseResultOneOfAck{value: val, isSet: true}
}

func (v NullableOrderPatch200ResponseResultOneOfAck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderPatch200ResponseResultOneOfAck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


