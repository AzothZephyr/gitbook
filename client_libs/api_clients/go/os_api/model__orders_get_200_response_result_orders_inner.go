/*
Cube Osmium HTTP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
Contact: support@cube.exchange
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrdersGet200ResponseResultOrdersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrdersGet200ResponseResultOrdersInner{}

// OrdersGet200ResponseResultOrdersInner A resting order. Sent on bootstrap in `RestingOrders`.
type OrdersGet200ResponseResultOrdersInner struct {
	// The client order ID specified in the new-order request.
	ClientOrderId int32 `json:"clientOrderId"`
	// [Exchange order ID](#exchange-order-id)
	ExchangeOrderId int32 `json:"exchangeOrderId"`
	MarketId int32 `json:"marketId"`
	Price int32 `json:"price"`
	// The quantity submitted in the latest quantity-modifying request. If the order has not been modified, then it is the quantity on the new-order-ack. If it has been modified, then it is the quantity of the latest modify-order-ack.
	OrderQuantity int32 `json:"orderQuantity"`
	Side int32 `json:"side"`
	TimeInForce int32 `json:"timeInForce"`
	OrderType int32 `json:"orderType"`
	// The current remaining quantity on the book.
	RemainingQuantity int32 `json:"remainingQuantity"`
	// [Transact time](#transact-time) of the NewOrderAck
	RestTime int32 `json:"restTime"`
	SubaccountId int32 `json:"subaccountId"`
	// The cumulative filled quantity for this order.
	CumulativeQuantity int32 `json:"cumulativeQuantity"`
	CancelOnDisconnect bool `json:"cancelOnDisconnect"`
}

type _OrdersGet200ResponseResultOrdersInner OrdersGet200ResponseResultOrdersInner

// NewOrdersGet200ResponseResultOrdersInner instantiates a new OrdersGet200ResponseResultOrdersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrdersGet200ResponseResultOrdersInner(clientOrderId int32, exchangeOrderId int32, marketId int32, price int32, orderQuantity int32, side int32, timeInForce int32, orderType int32, remainingQuantity int32, restTime int32, subaccountId int32, cumulativeQuantity int32, cancelOnDisconnect bool) *OrdersGet200ResponseResultOrdersInner {
	this := OrdersGet200ResponseResultOrdersInner{}
	this.ClientOrderId = clientOrderId
	this.ExchangeOrderId = exchangeOrderId
	this.MarketId = marketId
	this.Price = price
	this.OrderQuantity = orderQuantity
	this.Side = side
	this.TimeInForce = timeInForce
	this.OrderType = orderType
	this.RemainingQuantity = remainingQuantity
	this.RestTime = restTime
	this.SubaccountId = subaccountId
	this.CumulativeQuantity = cumulativeQuantity
	this.CancelOnDisconnect = cancelOnDisconnect
	return &this
}

// NewOrdersGet200ResponseResultOrdersInnerWithDefaults instantiates a new OrdersGet200ResponseResultOrdersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrdersGet200ResponseResultOrdersInnerWithDefaults() *OrdersGet200ResponseResultOrdersInner {
	this := OrdersGet200ResponseResultOrdersInner{}
	return &this
}

// GetClientOrderId returns the ClientOrderId field value
func (o *OrdersGet200ResponseResultOrdersInner) GetClientOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetClientOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientOrderId, true
}

// SetClientOrderId sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetClientOrderId(v int32) {
	o.ClientOrderId = v
}

// GetExchangeOrderId returns the ExchangeOrderId field value
func (o *OrdersGet200ResponseResultOrdersInner) GetExchangeOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExchangeOrderId
}

// GetExchangeOrderIdOk returns a tuple with the ExchangeOrderId field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetExchangeOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExchangeOrderId, true
}

// SetExchangeOrderId sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetExchangeOrderId(v int32) {
	o.ExchangeOrderId = v
}

// GetMarketId returns the MarketId field value
func (o *OrdersGet200ResponseResultOrdersInner) GetMarketId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetMarketIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarketId, true
}

// SetMarketId sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetMarketId(v int32) {
	o.MarketId = v
}

// GetPrice returns the Price field value
func (o *OrdersGet200ResponseResultOrdersInner) GetPrice() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetPriceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetPrice(v int32) {
	o.Price = v
}

// GetOrderQuantity returns the OrderQuantity field value
func (o *OrdersGet200ResponseResultOrdersInner) GetOrderQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderQuantity
}

// GetOrderQuantityOk returns a tuple with the OrderQuantity field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetOrderQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderQuantity, true
}

// SetOrderQuantity sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetOrderQuantity(v int32) {
	o.OrderQuantity = v
}

// GetSide returns the Side field value
func (o *OrdersGet200ResponseResultOrdersInner) GetSide() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Side
}

// GetSideOk returns a tuple with the Side field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetSideOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Side, true
}

// SetSide sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetSide(v int32) {
	o.Side = v
}

// GetTimeInForce returns the TimeInForce field value
func (o *OrdersGet200ResponseResultOrdersInner) GetTimeInForce() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TimeInForce
}

// GetTimeInForceOk returns a tuple with the TimeInForce field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetTimeInForceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeInForce, true
}

// SetTimeInForce sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetTimeInForce(v int32) {
	o.TimeInForce = v
}

// GetOrderType returns the OrderType field value
func (o *OrdersGet200ResponseResultOrdersInner) GetOrderType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetOrderTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderType, true
}

// SetOrderType sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetOrderType(v int32) {
	o.OrderType = v
}

// GetRemainingQuantity returns the RemainingQuantity field value
func (o *OrdersGet200ResponseResultOrdersInner) GetRemainingQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RemainingQuantity
}

// GetRemainingQuantityOk returns a tuple with the RemainingQuantity field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetRemainingQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemainingQuantity, true
}

// SetRemainingQuantity sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetRemainingQuantity(v int32) {
	o.RemainingQuantity = v
}

// GetRestTime returns the RestTime field value
func (o *OrdersGet200ResponseResultOrdersInner) GetRestTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RestTime
}

// GetRestTimeOk returns a tuple with the RestTime field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetRestTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestTime, true
}

// SetRestTime sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetRestTime(v int32) {
	o.RestTime = v
}

// GetSubaccountId returns the SubaccountId field value
func (o *OrdersGet200ResponseResultOrdersInner) GetSubaccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SubaccountId
}

// GetSubaccountIdOk returns a tuple with the SubaccountId field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetSubaccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubaccountId, true
}

// SetSubaccountId sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetSubaccountId(v int32) {
	o.SubaccountId = v
}

// GetCumulativeQuantity returns the CumulativeQuantity field value
func (o *OrdersGet200ResponseResultOrdersInner) GetCumulativeQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CumulativeQuantity
}

// GetCumulativeQuantityOk returns a tuple with the CumulativeQuantity field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetCumulativeQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CumulativeQuantity, true
}

// SetCumulativeQuantity sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetCumulativeQuantity(v int32) {
	o.CumulativeQuantity = v
}

// GetCancelOnDisconnect returns the CancelOnDisconnect field value
func (o *OrdersGet200ResponseResultOrdersInner) GetCancelOnDisconnect() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CancelOnDisconnect
}

// GetCancelOnDisconnectOk returns a tuple with the CancelOnDisconnect field value
// and a boolean to check if the value has been set.
func (o *OrdersGet200ResponseResultOrdersInner) GetCancelOnDisconnectOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CancelOnDisconnect, true
}

// SetCancelOnDisconnect sets field value
func (o *OrdersGet200ResponseResultOrdersInner) SetCancelOnDisconnect(v bool) {
	o.CancelOnDisconnect = v
}

func (o OrdersGet200ResponseResultOrdersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrdersGet200ResponseResultOrdersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clientOrderId"] = o.ClientOrderId
	toSerialize["exchangeOrderId"] = o.ExchangeOrderId
	toSerialize["marketId"] = o.MarketId
	toSerialize["price"] = o.Price
	toSerialize["orderQuantity"] = o.OrderQuantity
	toSerialize["side"] = o.Side
	toSerialize["timeInForce"] = o.TimeInForce
	toSerialize["orderType"] = o.OrderType
	toSerialize["remainingQuantity"] = o.RemainingQuantity
	toSerialize["restTime"] = o.RestTime
	toSerialize["subaccountId"] = o.SubaccountId
	toSerialize["cumulativeQuantity"] = o.CumulativeQuantity
	toSerialize["cancelOnDisconnect"] = o.CancelOnDisconnect
	return toSerialize, nil
}

func (o *OrdersGet200ResponseResultOrdersInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clientOrderId",
		"exchangeOrderId",
		"marketId",
		"price",
		"orderQuantity",
		"side",
		"timeInForce",
		"orderType",
		"remainingQuantity",
		"restTime",
		"subaccountId",
		"cumulativeQuantity",
		"cancelOnDisconnect",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrdersGet200ResponseResultOrdersInner := _OrdersGet200ResponseResultOrdersInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrdersGet200ResponseResultOrdersInner)

	if err != nil {
		return err
	}

	*o = OrdersGet200ResponseResultOrdersInner(varOrdersGet200ResponseResultOrdersInner)

	return err
}

type NullableOrdersGet200ResponseResultOrdersInner struct {
	value *OrdersGet200ResponseResultOrdersInner
	isSet bool
}

func (v NullableOrdersGet200ResponseResultOrdersInner) Get() *OrdersGet200ResponseResultOrdersInner {
	return v.value
}

func (v *NullableOrdersGet200ResponseResultOrdersInner) Set(val *OrdersGet200ResponseResultOrdersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOrdersGet200ResponseResultOrdersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOrdersGet200ResponseResultOrdersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrdersGet200ResponseResultOrdersInner(val *OrdersGet200ResponseResultOrdersInner) *NullableOrdersGet200ResponseResultOrdersInner {
	return &NullableOrdersGet200ResponseResultOrdersInner{value: val, isSet: true}
}

func (v NullableOrdersGet200ResponseResultOrdersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrdersGet200ResponseResultOrdersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


