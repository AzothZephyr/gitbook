/*
 * Cube Iridium HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MarketsGet200ResponseResult {
    #[serde(rename = "assets")]
    pub assets: Vec<models::MarketsGet200ResponseResultAssetsInner>,
    #[serde(rename = "sources")]
    pub sources: Vec<models::MarketsGet200ResponseResultSourcesInner>,
    #[serde(rename = "markets")]
    pub markets: Vec<models::MarketsGet200ResponseResultMarketsInner>,
    #[serde(rename = "feeTables")]
    pub fee_tables: Vec<models::MarketsGet200ResponseResultFeeTablesInner>,
}

impl MarketsGet200ResponseResult {
    pub fn new(assets: Vec<models::MarketsGet200ResponseResultAssetsInner>, sources: Vec<models::MarketsGet200ResponseResultSourcesInner>, markets: Vec<models::MarketsGet200ResponseResultMarketsInner>, fee_tables: Vec<models::MarketsGet200ResponseResultFeeTablesInner>) -> MarketsGet200ResponseResult {
        MarketsGet200ResponseResult {
            assets,
            sources,
            markets,
            fee_tables,
        }
    }
}

