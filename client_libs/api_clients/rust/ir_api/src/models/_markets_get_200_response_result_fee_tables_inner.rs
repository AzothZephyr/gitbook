/*
 * Cube Iridium HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MarketsGet200ResponseResultFeeTablesInner : A fee table consisting of one or more fee tiers. Each tier is applied in priority order and the first tier whose requirements match the characteristics of a given fill determines the fees for that fill. Each market is associated with a specific fee table via its \"feeTableId\".
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MarketsGet200ResponseResultFeeTablesInner {
    #[serde(rename = "feeTableId")]
    pub fee_table_id: i32,
    #[serde(rename = "feeTiers")]
    pub fee_tiers: Vec<models::MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner>,
}

impl MarketsGet200ResponseResultFeeTablesInner {
    /// A fee table consisting of one or more fee tiers. Each tier is applied in priority order and the first tier whose requirements match the characteristics of a given fill determines the fees for that fill. Each market is associated with a specific fee table via its \"feeTableId\".
    pub fn new(fee_table_id: i32, fee_tiers: Vec<models::MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner>) -> MarketsGet200ResponseResultFeeTablesInner {
        MarketsGet200ResponseResultFeeTablesInner {
            fee_table_id,
            fee_tiers,
        }
    }
}

