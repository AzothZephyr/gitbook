/*
 * Cube Iridium HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner : A single row in a FeeTable.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner {
    /// The order in which this tier is considered when applying the fee table that contains it.
    #[serde(rename = "priority")]
    pub priority: i32,
    /// The multiplicative fee ratio for the resting order
    #[serde(rename = "makerFeeRatio")]
    pub maker_fee_ratio: f64,
    /// The multiplicative fee ratio for the aggressing order
    #[serde(rename = "takerFeeRatio")]
    pub taker_fee_ratio: f64,
}

impl MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner {
    /// A single row in a FeeTable.
    pub fn new(priority: i32, maker_fee_ratio: f64, taker_fee_ratio: f64) -> MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner {
        MarketsGet200ResponseResultFeeTablesInnerFeeTiersInner {
            priority,
            maker_fee_ratio,
            taker_fee_ratio,
        }
    }
}

