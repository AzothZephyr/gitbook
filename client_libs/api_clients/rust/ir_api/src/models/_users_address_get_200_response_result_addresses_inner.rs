/*
 * Cube Iridium HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsersAddressGet200ResponseResultAddressesInner {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "sourceId")]
    pub source_id: i32,
    #[serde(rename = "assetId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub asset_id: Option<Option<i32>>,
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "approvedAt")]
    pub approved_at: String,
    #[serde(rename = "activeSince")]
    pub active_since: String,
}

impl UsersAddressGet200ResponseResultAddressesInner {
    pub fn new(id: uuid::Uuid, name: String, source_id: i32, address: String, status: Status, created_at: String, approved_at: String, active_since: String) -> UsersAddressGet200ResponseResultAddressesInner {
        UsersAddressGet200ResponseResultAddressesInner {
            id,
            name,
            source_id,
            asset_id: None,
            address,
            status,
            created_at,
            approved_at,
            active_since,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "pending")]
    Pending,
    #[serde(rename = "approved")]
    Approved,
    #[serde(rename = "active")]
    Active,
}

impl Default for Status {
    fn default() -> Status {
        Self::Pending
    }
}

