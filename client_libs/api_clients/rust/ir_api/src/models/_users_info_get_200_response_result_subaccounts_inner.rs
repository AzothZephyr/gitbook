/*
 * Cube Iridium HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsersInfoGet200ResponseResultSubaccountsInner {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "name")]
    pub name: String,
    /// Deposit address by source id
    #[serde(rename = "addresses")]
    pub addresses: Vec<Vec<String>>,
    #[serde(rename = "hasOrderHistory")]
    pub has_order_history: bool,
}

impl UsersInfoGet200ResponseResultSubaccountsInner {
    pub fn new(id: i64, name: String, addresses: Vec<Vec<String>>, has_order_history: bool) -> UsersInfoGet200ResponseResultSubaccountsInner {
        UsersInfoGet200ResponseResultSubaccountsInner {
            id,
            name,
            addresses,
            has_order_history,
        }
    }
}

