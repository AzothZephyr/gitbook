/*
 * Cube Iridium HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsersSubaccountSubaccountIdFillsGet200ResponseResultFillsInner {
    #[serde(rename = "marketId")]
    pub market_id: i32,
    #[serde(rename = "tradeId")]
    pub trade_id: i64,
    #[serde(rename = "orderId")]
    pub order_id: i64,
    #[serde(rename = "side")]
    pub side: Side,
    #[serde(rename = "aggressingSide", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub aggressing_side: Option<Option<AggressingSide>>,
    #[serde(rename = "price", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub price: Option<Option<i64>>,
    #[serde(rename = "quantity", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<Option<i64>>,
    #[serde(rename = "baseAmount")]
    pub base_amount: models::Decimal,
    #[serde(rename = "quoteAmount")]
    pub quote_amount: models::Decimal,
    #[serde(rename = "feeAmount")]
    pub fee_amount: models::Decimal,
    #[serde(rename = "feeAssetId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub fee_asset_id: Option<Option<i32>>,
    #[serde(rename = "filledAt")]
    pub filled_at: i64,
}

impl UsersSubaccountSubaccountIdFillsGet200ResponseResultFillsInner {
    pub fn new(market_id: i32, trade_id: i64, order_id: i64, side: Side, base_amount: models::Decimal, quote_amount: models::Decimal, fee_amount: models::Decimal, filled_at: i64) -> UsersSubaccountSubaccountIdFillsGet200ResponseResultFillsInner {
        UsersSubaccountSubaccountIdFillsGet200ResponseResultFillsInner {
            market_id,
            trade_id,
            order_id,
            side,
            aggressing_side: None,
            price: None,
            quantity: None,
            base_amount,
            quote_amount,
            fee_amount,
            fee_asset_id: None,
            filled_at,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Side {
    #[serde(rename = "Bid")]
    Bid,
    #[serde(rename = "Ask")]
    Ask,
}

impl Default for Side {
    fn default() -> Side {
        Self::Bid
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AggressingSide {
    #[serde(rename = "Bid")]
    Bid,
    #[serde(rename = "Ask")]
    Ask,
}

impl Default for AggressingSide {
    fn default() -> AggressingSide {
        Self::Bid
    }
}

