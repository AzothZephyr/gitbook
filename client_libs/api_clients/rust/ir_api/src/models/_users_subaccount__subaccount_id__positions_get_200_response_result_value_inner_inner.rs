/*
 * Cube Iridium HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsersSubaccountSubaccountIdPositionsGet200ResponseResultValueInnerInner {
    /// The cube-sequenced amount.
    #[serde(rename = "amount")]
    pub amount: models::Decimal,
    /// The on-chain amount according to the latest `received` block.
    #[serde(rename = "receivedAmount")]
    pub received_amount: models::Decimal,
    #[serde(rename = "pendingDeposits")]
    pub pending_deposits: models::Decimal,
    #[serde(rename = "assetId")]
    pub asset_id: i32,
    #[serde(rename = "accountingType")]
    pub accounting_type: AccountingType,
}

impl UsersSubaccountSubaccountIdPositionsGet200ResponseResultValueInnerInner {
    pub fn new(amount: models::Decimal, received_amount: models::Decimal, pending_deposits: models::Decimal, asset_id: i32, accounting_type: AccountingType) -> UsersSubaccountSubaccountIdPositionsGet200ResponseResultValueInnerInner {
        UsersSubaccountSubaccountIdPositionsGet200ResponseResultValueInnerInner {
            amount,
            received_amount,
            pending_deposits,
            asset_id,
            accounting_type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AccountingType {
    #[serde(rename = "liability")]
    Liability,
    #[serde(rename = "receivable")]
    Receivable,
    #[serde(rename = "income")]
    Income,
    #[serde(rename = "asset")]
    Asset,
    #[serde(rename = "loss")]
    Loss,
}

impl Default for AccountingType {
    fn default() -> AccountingType {
        Self::Liability
    }
}

