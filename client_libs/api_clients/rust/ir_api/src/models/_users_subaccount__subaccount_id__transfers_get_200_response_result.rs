/*
 * Cube Iridium HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsersSubaccountSubaccountIdTransfersGet200ResponseResult {
    #[serde(rename = "deposits")]
    pub deposits: std::collections::HashMap<String, models::UsersSubaccountSubaccountIdTransfersGet200ResponseResultDepositsValue>,
    #[serde(rename = "withdrawals")]
    pub withdrawals: std::collections::HashMap<String, models::UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValue>,
}

impl UsersSubaccountSubaccountIdTransfersGet200ResponseResult {
    pub fn new(deposits: std::collections::HashMap<String, models::UsersSubaccountSubaccountIdTransfersGet200ResponseResultDepositsValue>, withdrawals: std::collections::HashMap<String, models::UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValue>) -> UsersSubaccountSubaccountIdTransfersGet200ResponseResult {
        UsersSubaccountSubaccountIdTransfersGet200ResponseResult {
            deposits,
            withdrawals,
        }
    }
}

