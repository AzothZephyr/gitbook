/*
 * Cube Iridium HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner {
    #[serde(rename = "assetId")]
    pub asset_id: i32,
    #[serde(rename = "amount")]
    pub amount: models::Decimal,
    /// Once the transaction has been determined / sent, `txn_hash`, `txn_index`, and `txn_state` will be populated
    #[serde(rename = "txnHash", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub txn_hash: Option<Option<String>>,
    #[serde(rename = "txnIndex", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub txn_index: Option<Option<i64>>,
    #[serde(rename = "txnState", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub txn_state: Option<Option<TxnState>>,
    /// When the withdrawal request was created.
    #[serde(rename = "createdAt")]
    pub created_at: String,
    /// When the withdrawal was sent out.
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    /// A unique identifier for this withdrawal request.
    #[serde(rename = "attemptId")]
    pub attempt_id: i64,
    /// The withdrawal destination address
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "approved", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub approved: Option<Option<bool>>,
    #[serde(rename = "reason", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub reason: Option<Option<String>>,
}

impl UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner {
    pub fn new(asset_id: i32, amount: models::Decimal, created_at: String, updated_at: String, attempt_id: i64, address: String) -> UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner {
        UsersSubaccountSubaccountIdTransfersGet200ResponseResultWithdrawalsValueInnerInner {
            asset_id,
            amount,
            txn_hash: None,
            txn_index: None,
            txn_state: None,
            created_at,
            updated_at,
            attempt_id,
            address,
            approved: None,
            reason: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TxnState {
    #[serde(rename = "pending")]
    Pending,
    #[serde(rename = "received")]
    Received,
    #[serde(rename = "confirmed")]
    Confirmed,
    #[serde(rename = "dropped")]
    Dropped,
    #[serde(rename = "failed")]
    Failed,
}

impl Default for TxnState {
    fn default() -> TxnState {
        Self::Pending
    }
}

