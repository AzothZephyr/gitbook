/*
 * Cube Mendelev HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BookMarketIdRecentTradesGet200ResponseResultTradesInner {
    /// The ID assigned to this trade. All trades that occur from the same event will be assigned the same ID, and are considered to be an atomic batch.
    #[serde(rename = "tradeId")]
    pub trade_id: i32,
    /// The price that this trade occurred at.
    #[serde(rename = "price")]
    pub price: i32,
    /// The side of the aggressing order.
    #[serde(rename = "aggressingSide")]
    pub aggressing_side: i32,
    /// The [Exchange order ID](./websocket-trade-api.md#exchange-order-id) of the resting order.
    #[serde(rename = "restingExchangeOrderId")]
    pub resting_exchange_order_id: i32,
    #[serde(rename = "fillQuantity")]
    pub fill_quantity: i32,
    /// The [transact time](./websocket-trade-api.md#transact-time) assigned by the matching engine for this trade. All trades that occur from the same event will be assigned the same transact time.
    #[serde(rename = "transactTime")]
    pub transact_time: i32,
    /// The [Exchange order ID](./websocket-trade-api.md#exchange-order-id) of the aggressing order.
    #[serde(rename = "aggressingExchangeOrderId")]
    pub aggressing_exchange_order_id: i32,
}

impl BookMarketIdRecentTradesGet200ResponseResultTradesInner {
    pub fn new(trade_id: i32, price: i32, aggressing_side: i32, resting_exchange_order_id: i32, fill_quantity: i32, transact_time: i32, aggressing_exchange_order_id: i32) -> BookMarketIdRecentTradesGet200ResponseResultTradesInner {
        BookMarketIdRecentTradesGet200ResponseResultTradesInner {
            trade_id,
            price,
            aggressing_side,
            resting_exchange_order_id,
            fill_quantity,
            transact_time,
            aggressing_exchange_order_id,
        }
    }
}

