/*
 * Cube Osmium HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderDelete200ResponseResultOneOfAck : Cancel-order-ack confirms a cancel request, or that an order has been canceled as the result of a different user-initiated reason.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderDelete200ResponseResultOneOfAck {
    #[serde(rename = "msgSeqNum")]
    pub msg_seq_num: i32,
    #[serde(rename = "clientOrderId")]
    pub client_order_id: i32,
    /// If the Reason is `DISCONNECT`, `IOC`, `STP_RESTING`, or `STP_AGGRESSING`, this request ID will be `u64::MAX`. Otherwise, it will be the request ID of the initiated cancel action. For a mass cancel, each cancel order ack will have the MassCancel's request_id.
    #[serde(rename = "requestId")]
    pub request_id: i32,
    /// [Transact time](#transact-time)
    #[serde(rename = "transactTime")]
    pub transact_time: i32,
    #[serde(rename = "subaccountId")]
    pub subaccount_id: i32,
    #[serde(rename = "reason")]
    pub reason: i32,
    #[serde(rename = "marketId")]
    pub market_id: i32,
    /// [Exchange order ID](#exchange-order-id)
    #[serde(rename = "exchangeOrderId")]
    pub exchange_order_id: i32,
}

impl OrderDelete200ResponseResultOneOfAck {
    /// Cancel-order-ack confirms a cancel request, or that an order has been canceled as the result of a different user-initiated reason.
    pub fn new(msg_seq_num: i32, client_order_id: i32, request_id: i32, transact_time: i32, subaccount_id: i32, reason: i32, market_id: i32, exchange_order_id: i32) -> OrderDelete200ResponseResultOneOfAck {
        OrderDelete200ResponseResultOneOfAck {
            msg_seq_num,
            client_order_id,
            request_id,
            transact_time,
            subaccount_id,
            reason,
            market_id,
            exchange_order_id,
        }
    }
}

