/*
 * Cube Osmium HTTP API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@cube.exchange
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrdersGet200ResponseResultOrdersInner : A resting order. Sent on bootstrap in `RestingOrders`.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrdersGet200ResponseResultOrdersInner {
    /// The client order ID specified in the new-order request.
    #[serde(rename = "clientOrderId")]
    pub client_order_id: i32,
    /// [Exchange order ID](#exchange-order-id)
    #[serde(rename = "exchangeOrderId")]
    pub exchange_order_id: i32,
    #[serde(rename = "marketId")]
    pub market_id: i32,
    #[serde(rename = "price")]
    pub price: i32,
    /// The quantity submitted in the latest quantity-modifying request. If the order has not been modified, then it is the quantity on the new-order-ack. If it has been modified, then it is the quantity of the latest modify-order-ack.
    #[serde(rename = "orderQuantity")]
    pub order_quantity: i32,
    #[serde(rename = "side")]
    pub side: i32,
    #[serde(rename = "timeInForce")]
    pub time_in_force: i32,
    #[serde(rename = "orderType")]
    pub order_type: i32,
    /// The current remaining quantity on the book.
    #[serde(rename = "remainingQuantity")]
    pub remaining_quantity: i32,
    /// [Transact time](#transact-time) of the NewOrderAck
    #[serde(rename = "restTime")]
    pub rest_time: i32,
    #[serde(rename = "subaccountId")]
    pub subaccount_id: i32,
    /// The cumulative filled quantity for this order.
    #[serde(rename = "cumulativeQuantity")]
    pub cumulative_quantity: i32,
    #[serde(rename = "cancelOnDisconnect")]
    pub cancel_on_disconnect: bool,
}

impl OrdersGet200ResponseResultOrdersInner {
    /// A resting order. Sent on bootstrap in `RestingOrders`.
    pub fn new(client_order_id: i32, exchange_order_id: i32, market_id: i32, price: i32, order_quantity: i32, side: i32, time_in_force: i32, order_type: i32, remaining_quantity: i32, rest_time: i32, subaccount_id: i32, cumulative_quantity: i32, cancel_on_disconnect: bool) -> OrdersGet200ResponseResultOrdersInner {
        OrdersGet200ResponseResultOrdersInner {
            client_order_id,
            exchange_order_id,
            market_id,
            price,
            order_quantity,
            side,
            time_in_force,
            order_type,
            remaining_quantity,
            rest_time,
            subaccount_id,
            cumulative_quantity,
            cancel_on_disconnect,
        }
    }
}

