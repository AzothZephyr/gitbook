/**
 * Cube Iridium HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@cube.exchange
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class MarketsGet200ResponseResultAssetsInner {
    /**
    * The Cube-assigned asset ID.
    */
    'assetId': number;
    /**
    * The canonical symbol for this asset.
    */
    'symbol': string;
    /**
    * The maximum precision of this asset.  e.g `18` for ETH (`10^18` WEI per ETH), `8` for BTC (`10^8` SAT per BTC)
    */
    'decimals': number;
    /**
    * The default number of decimal places to display for human-readable quantities for this asset.
    */
    'displayDecimals': number;
    /**
    * Whether this asset settles to the blockchain.
    */
    'settles': boolean;
    /**
    * The type of this asset.
    */
    'assetType': MarketsGet200ResponseResultAssetsInnerAssetTypeEnum;
    /**
    * The source ID of this asset.
    */
    'sourceId': number;
    /**
    * Additional metadata about this asset.
    */
    'metadata': any | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "assetId",
            "baseName": "assetId",
            "type": "number",
            "format": "uint64"
        },
        {
            "name": "symbol",
            "baseName": "symbol",
            "type": "string",
            "format": ""
        },
        {
            "name": "decimals",
            "baseName": "decimals",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "displayDecimals",
            "baseName": "displayDecimals",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "settles",
            "baseName": "settles",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "assetType",
            "baseName": "assetType",
            "type": "MarketsGet200ResponseResultAssetsInnerAssetTypeEnum",
            "format": ""
        },
        {
            "name": "sourceId",
            "baseName": "sourceId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return MarketsGet200ResponseResultAssetsInner.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum MarketsGet200ResponseResultAssetsInnerAssetTypeEnum {
    Fiat = 'Fiat',
    Crypto = 'Crypto'
}

