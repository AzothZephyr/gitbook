/**
 * Cube Mendelev HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@cube.exchange
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BookMarketIdSnapshotGet200ResponseResultAnyOf1OrdersInner } from '../models/BookMarketIdSnapshotGet200ResponseResultAnyOf1OrdersInner';
import { BookMarketIdSnapshotGet200ResponseResultAnyOfMarketState } from '../models/BookMarketIdSnapshotGet200ResponseResultAnyOfMarketState';
import { HttpFile } from '../http/http';

export class BookMarketIdSnapshotGet200ResponseResultAnyOf1 {
    'orders': Array<BookMarketIdSnapshotGet200ResponseResultAnyOf1OrdersInner>;
    'lastTransactTime': number;
    'lastTradePrice'?: number | null;
    'marketState': BookMarketIdSnapshotGet200ResponseResultAnyOfMarketState;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "orders",
            "baseName": "orders",
            "type": "Array<BookMarketIdSnapshotGet200ResponseResultAnyOf1OrdersInner>",
            "format": ""
        },
        {
            "name": "lastTransactTime",
            "baseName": "lastTransactTime",
            "type": "number",
            "format": "uint64"
        },
        {
            "name": "lastTradePrice",
            "baseName": "lastTradePrice",
            "type": "number",
            "format": "uint64"
        },
        {
            "name": "marketState",
            "baseName": "marketState",
            "type": "BookMarketIdSnapshotGet200ResponseResultAnyOfMarketState",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return BookMarketIdSnapshotGet200ResponseResultAnyOf1.attributeTypeMap;
    }

    public constructor() {
    }
}

